{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst universities = [{\n  name: \"Massachusetts Institute of Technology (MIT)\",\n  qsGeneralRank: 1,\n  subjects: [\"Computer Science\", \"Mathematics\", \"Engineering\"],\n  subjectData: {\n    \"Computer Science\": [{\n      year: 2021,\n      rank: 1,\n      intake: \"Sept\",\n      fees: \"$53,790\",\n      eligibility: \"GPA > 3.5\",\n      gpaCutoff: 3.8,\n      satCutoff: 1500,\n      courseLink: \"https://mit.edu/cs\"\n    }, {\n      year: 2022,\n      rank: 1,\n      intake: \"Sept\",\n      fees: \"$54,000\",\n      eligibility: \"GPA > 3.6\",\n      gpaCutoff: 3.9,\n      satCutoff: 1520,\n      courseLink: \"https://mit.edu/cs\"\n    }, {\n      year: 2023,\n      rank: 1,\n      intake: \"Sept\",\n      fees: \"$54,200\",\n      eligibility: \"GPA > 3.7\",\n      gpaCutoff: 4.0,\n      satCutoff: 1530,\n      courseLink: \"https://mit.edu/cs\"\n    }],\n    \"Mathematics\": [{\n      year: 2021,\n      rank: 1,\n      intake: \"Sept\",\n      fees: \"$50,000\",\n      eligibility: \"GPA > 3.5\",\n      gpaCutoff: 3.7,\n      satCutoff: 1480,\n      courseLink: \"https://mit.edu/math\"\n    }, {\n      year: 2022,\n      rank: 1,\n      intake: \"Sept\",\n      fees: \"$51,000\",\n      eligibility: \"GPA > 3.6\",\n      gpaCutoff: 3.8,\n      satCutoff: 1490,\n      courseLink: \"https://mit.edu/math\"\n    }, {\n      year: 2023,\n      rank: 2,\n      intake: \"Sept\",\n      fees: \"$52,000\",\n      eligibility: \"GPA > 3.7\",\n      gpaCutoff: 3.9,\n      satCutoff: 1500,\n      courseLink: \"https://mit.edu/math\"\n    }]\n  }\n}, {\n  name: \"Stanford University\",\n  qsGeneralRank: 2,\n  subjects: [\"Computer Science\", \"Physics\", \"Business\"],\n  subjectData: {\n    \"Computer Science\": [{\n      year: 2021,\n      rank: 2,\n      intake: \"Oct\",\n      fees: \"$55,473\",\n      eligibility: \"GPA > 3.6\",\n      gpaCutoff: 3.9,\n      satCutoff: 1510,\n      courseLink: \"https://stanford.edu/cs\"\n    }, {\n      year: 2022,\n      rank: 2,\n      intake: \"Oct\",\n      fees: \"$56,000\",\n      eligibility: \"GPA > 3.7\",\n      gpaCutoff: 4.0,\n      satCutoff: 1530,\n      courseLink: \"https://stanford.edu/cs\"\n    }, {\n      year: 2023,\n      rank: 1,\n      intake: \"Oct\",\n      fees: \"$56,500\",\n      eligibility: \"GPA > 3.8\",\n      gpaCutoff: 4.0,\n      satCutoff: 1550,\n      courseLink: \"https://stanford.edu/cs\"\n    }]\n  }\n}];\nconst App = () => {\n  _s();\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\n  const [gpa, setGpa] = useState(\"\");\n  const [sat, setSat] = useState(\"\");\n  const handleUniversityChange = e => {\n    const uni = universities.find(u => u.name === e.target.value);\n    setSelectedUniversity(uni);\n    setSelectedSubject(\"\");\n  };\n  const handleSubjectChange = e => {\n    setSelectedSubject(e.target.value);\n  };\n  const getAdmissionProbability = () => {\n    const g = parseFloat(gpa);\n    const s = parseInt(sat);\n    if (isNaN(g) || isNaN(s)) return \"Enter GPA and SAT\";\n    if (g >= 3.8 && s >= 1500) return \"High\";\n    if (g >= 3.5 && s >= 1400) return \"Moderate\";\n    if (g >= 3.0 && s >= 1300) return \"Low\";\n    return \"Very Low\";\n  };\n  const handleDownloadExcel = () => {\n    if (!selectedUniversity || !selectedSubject) {\n      alert(\"Please select both University and Subject first.\");\n      return;\n    }\n    const data = selectedUniversity.subjectData[selectedSubject];\n    if (!data || data.length === 0) {\n      alert(\"No data available.\");\n      return;\n    }\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Subject Rankings\");\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const blob = new Blob([excelBuffer], {\n      type: \"application/octet-stream\"\n    });\n    saveAs(blob, `${selectedSubject}_QS_Data.xlsx`);\n  };\n  const handleDownloadPDF = () => {\n    const element = document.getElementById(\"exportSection\");\n    html2canvas(element).then(canvas => {\n      const pdf = new jsPDF();\n      const imgData = canvas.toDataURL(\"image/png\");\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(imgData, \"PNG\", 0, 0, pdfWidth, pdfHeight);\n      pdf.save(`${selectedSubject}_QS_Data.pdf`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QS University Rankings Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select University: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleUniversityChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"--Choose--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), universities.map((u, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u.name,\n        children: u.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), selectedUniversity && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"QS General Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 14\n        }, this), \" \", selectedUniversity.qsGeneralRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleSubjectChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Choose Subject--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), selectedUniversity.subjects.map((s, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          children: s\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedSubject && (selectedUniversity === null || selectedUniversity === void 0 ? void 0 : selectedUniversity.subjectData[selectedSubject]) && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"exportSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedSubject, \" Rankings\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Intake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Eligibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GPA Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SAT Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedUniversity.subjectData[selectedSubject].map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.intake\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.fees\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.eligibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.gpaCutoff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.satCutoff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: row.courseLink,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Student Inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"GPA: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: gpa,\n        onChange: e => setGpa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"SAT: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sat,\n        onChange: e => setSat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Predicted Admission Probability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 14\n        }, this), \" \", getAdmissionProbability()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadExcel,\n        children: \"Download Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadPDF,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"feZ6q6ZzoBVlfY14CkcdrI/NuJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","saveAs","jsPDF","html2canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","universities","name","qsGeneralRank","subjects","subjectData","year","rank","intake","fees","eligibility","gpaCutoff","satCutoff","courseLink","App","_s","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","gpa","setGpa","sat","setSat","handleUniversityChange","e","uni","find","u","target","value","handleSubjectChange","getAdmissionProbability","g","parseFloat","s","parseInt","isNaN","handleDownloadExcel","alert","data","length","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","handleDownloadPDF","element","document","getElementById","then","canvas","pdf","imgData","toDataURL","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","idx","id","border","cellPadding","row","href","rel","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nconst universities = [\r\n  {\r\n    name: \"Massachusetts Institute of Technology (MIT)\",\r\n    qsGeneralRank: 1,\r\n    subjects: [\"Computer Science\", \"Mathematics\", \"Engineering\"],\r\n    subjectData: {\r\n      \"Computer Science\": [\r\n        { year: 2021, rank: 1, intake: \"Sept\", fees: \"$53,790\", eligibility: \"GPA > 3.5\", gpaCutoff: 3.8, satCutoff: 1500, courseLink: \"https://mit.edu/cs\" },\r\n        { year: 2022, rank: 1, intake: \"Sept\", fees: \"$54,000\", eligibility: \"GPA > 3.6\", gpaCutoff: 3.9, satCutoff: 1520, courseLink: \"https://mit.edu/cs\" },\r\n        { year: 2023, rank: 1, intake: \"Sept\", fees: \"$54,200\", eligibility: \"GPA > 3.7\", gpaCutoff: 4.0, satCutoff: 1530, courseLink: \"https://mit.edu/cs\" },\r\n      ],\r\n      \"Mathematics\": [\r\n        { year: 2021, rank: 1, intake: \"Sept\", fees: \"$50,000\", eligibility: \"GPA > 3.5\", gpaCutoff: 3.7, satCutoff: 1480, courseLink: \"https://mit.edu/math\" },\r\n        { year: 2022, rank: 1, intake: \"Sept\", fees: \"$51,000\", eligibility: \"GPA > 3.6\", gpaCutoff: 3.8, satCutoff: 1490, courseLink: \"https://mit.edu/math\" },\r\n        { year: 2023, rank: 2, intake: \"Sept\", fees: \"$52,000\", eligibility: \"GPA > 3.7\", gpaCutoff: 3.9, satCutoff: 1500, courseLink: \"https://mit.edu/math\" },\r\n      ],\r\n    }\r\n  },\r\n  {\r\n    name: \"Stanford University\",\r\n    qsGeneralRank: 2,\r\n    subjects: [\"Computer Science\", \"Physics\", \"Business\"],\r\n    subjectData: {\r\n      \"Computer Science\": [\r\n        { year: 2021, rank: 2, intake: \"Oct\", fees: \"$55,473\", eligibility: \"GPA > 3.6\", gpaCutoff: 3.9, satCutoff: 1510, courseLink: \"https://stanford.edu/cs\" },\r\n        { year: 2022, rank: 2, intake: \"Oct\", fees: \"$56,000\", eligibility: \"GPA > 3.7\", gpaCutoff: 4.0, satCutoff: 1530, courseLink: \"https://stanford.edu/cs\" },\r\n        { year: 2023, rank: 1, intake: \"Oct\", fees: \"$56,500\", eligibility: \"GPA > 3.8\", gpaCutoff: 4.0, satCutoff: 1550, courseLink: \"https://stanford.edu/cs\" },\r\n      ]\r\n    }\r\n  }\r\n];\r\n\r\nconst App = () => {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  const [gpa, setGpa] = useState(\"\");\r\n  const [sat, setSat] = useState(\"\");\r\n\r\n  const handleUniversityChange = (e) => {\r\n    const uni = universities.find(u => u.name === e.target.value);\r\n    setSelectedUniversity(uni);\r\n    setSelectedSubject(\"\");\r\n  };\r\n\r\n  const handleSubjectChange = (e) => {\r\n    setSelectedSubject(e.target.value);\r\n  };\r\n\r\n  const getAdmissionProbability = () => {\r\n    const g = parseFloat(gpa);\r\n    const s = parseInt(sat);\r\n    if (isNaN(g) || isNaN(s)) return \"Enter GPA and SAT\";\r\n    if (g >= 3.8 && s >= 1500) return \"High\";\r\n    if (g >= 3.5 && s >= 1400) return \"Moderate\";\r\n    if (g >= 3.0 && s >= 1300) return \"Low\";\r\n    return \"Very Low\";\r\n  };\r\n\r\n  const handleDownloadExcel = () => {\r\n    if (!selectedUniversity || !selectedSubject) {\r\n      alert(\"Please select both University and Subject first.\");\r\n      return;\r\n    }\r\n\r\n    const data = selectedUniversity.subjectData[selectedSubject];\r\n    if (!data || data.length === 0) {\r\n      alert(\"No data available.\");\r\n      return;\r\n    }\r\n\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Subject Rankings\");\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const blob = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n    saveAs(blob, `${selectedSubject}_QS_Data.xlsx`);\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    const element = document.getElementById(\"exportSection\");\r\n    html2canvas(element).then(canvas => {\r\n      const pdf = new jsPDF();\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const imgProps = pdf.getImageProperties(imgData);\r\n      const pdfWidth = pdf.internal.pageSize.getWidth();\r\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n      pdf.addImage(imgData, \"PNG\", 0, 0, pdfWidth, pdfHeight);\r\n      pdf.save(`${selectedSubject}_QS_Data.pdf`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>QS University Rankings Explorer</h2>\r\n\r\n      <label>Select University: </label>\r\n      <select onChange={handleUniversityChange}>\r\n        <option value=\"\">--Choose--</option>\r\n        {universities.map((u, idx) => (\r\n          <option key={idx} value={u.name}>{u.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedUniversity && (\r\n        <>\r\n          <p><strong>QS General Rank:</strong> {selectedUniversity.qsGeneralRank}</p>\r\n\r\n          <label>Select Subject: </label>\r\n          <select onChange={handleSubjectChange}>\r\n            <option value=\"\">--Choose Subject--</option>\r\n            {selectedUniversity.subjects.map((s, idx) => (\r\n              <option key={idx} value={s}>{s}</option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      )}\r\n\r\n      {selectedSubject && selectedUniversity?.subjectData[selectedSubject] && (\r\n        <div id=\"exportSection\">\r\n          <h3>{selectedSubject} Rankings</h3>\r\n          <table border=\"1\" cellPadding=\"6\">\r\n            <thead>\r\n              <tr>\r\n                <th>Year</th>\r\n                <th>Rank</th>\r\n                <th>Intake</th>\r\n                <th>Fees</th>\r\n                <th>Eligibility</th>\r\n                <th>GPA Cutoff</th>\r\n                <th>SAT Cutoff</th>\r\n                <th>Course Link</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {selectedUniversity.subjectData[selectedSubject].map((row, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{row.year}</td>\r\n                  <td>{row.rank}</td>\r\n                  <td>{row.intake}</td>\r\n                  <td>{row.fees}</td>\r\n                  <td>{row.eligibility}</td>\r\n                  <td>{row.gpaCutoff}</td>\r\n                  <td>{row.satCutoff}</td>\r\n                  <td><a href={row.courseLink} target=\"_blank\" rel=\"noreferrer\">View</a></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <h4>Student Inputs</h4>\r\n          <label>GPA: </label>\r\n          <input type=\"text\" value={gpa} onChange={(e) => setGpa(e.target.value)} />\r\n          <br />\r\n          <label>SAT: </label>\r\n          <input type=\"text\" value={sat} onChange={(e) => setSat(e.target.value)} />\r\n          <p><strong>Predicted Admission Probability:</strong> {getAdmissionProbability()}</p>\r\n\r\n          <button onClick={handleDownloadExcel}>Download Excel</button>\r\n          <button onClick={handleDownloadPDF}>Download PDF</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}