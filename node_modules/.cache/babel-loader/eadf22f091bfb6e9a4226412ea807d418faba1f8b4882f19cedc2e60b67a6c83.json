{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\n// Define data at the top\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst universities = [/* (MIT data same as before, omitted here for brevity) */];\nconst App = () => {\n  _s();\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\n  const [studentType, setStudentType] = useState(\"international\");\n  const [gpa, setGpa] = useState(\"\");\n  const [sat, setSat] = useState(\"\");\n  const tableRef = useRef();\n  const handleUniversityChange = e => {\n    const uni = universities.find(u => u.name === e.target.value);\n    setSelectedUniversity(uni);\n    setSelectedSubject((uni === null || uni === void 0 ? void 0 : uni.subjects[0]) || \"\");\n  };\n  const handleConvertGpa = () => {\n    if (!gpa) return \"\";\n    const converted = parseFloat(gpa) / 10 * 4;\n    return converted.toFixed(2);\n  };\n  const getAdmissionProbability = () => {\n    const g = parseFloat(gpa);\n    const s = parseInt(sat);\n    if (isNaN(g) || isNaN(s)) return \"Enter GPA and SAT\";\n    if (g >= 3.8 && s >= 1500) return \"High\";\n    if (g >= 3.5 && s >= 1400) return \"Moderate\";\n    if (g >= 3.0 && s >= 1300) return \"Low\";\n    return \"Very Low\";\n  };\n  const handleDownloadExcel = () => {\n    if (!selectedUniversity || !selectedSubject) {\n      alert(\"Please select both University and Subject first.\");\n      return;\n    }\n    const data = selectedUniversity.subjectData[selectedSubject];\n    if (!data || data.length === 0) {\n      alert(\"No data available for selected subject.\");\n      return;\n    }\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Subject Rankings\");\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const blob = new Blob([excelBuffer], {\n      type: \"application/octet-stream\"\n    });\n    saveAs(blob, `${selectedSubject}_QS_Data.xlsx`);\n  };\n  const handleDownloadPDF = async () => {\n    if (!selectedUniversity || !selectedSubject) {\n      alert(\"Please select both University and Subject first.\");\n      return;\n    }\n    const input = tableRef.current;\n    const canvas = await html2canvas(input);\n    const imgData = canvas.toDataURL(\"image/png\");\n    const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n    const imgProps = pdf.getImageProperties(imgData);\n    const pdfWidth = pdf.internal.pageSize.getWidth();\n    const imgHeight = imgProps.height * pdfWidth / imgProps.width;\n    pdf.addImage(imgData, \"PNG\", 0, 10, pdfWidth, imgHeight);\n    pdf.save(`${selectedSubject}_QS_Data.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QS World University Rankings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select University: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleUniversityChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), universities.map((u, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u.name,\n        children: u.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), selectedUniversity && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"General QS Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 14\n        }, this), \" \", selectedUniversity.generalRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSubject,\n        onChange: e => setSelectedSubject(e.target.value),\n        children: selectedUniversity.subjects.map((subj, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: subj\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Student Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: studentType,\n        onChange: e => setStudentType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"international\",\n          children: \"International\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"domestic\",\n          children: \"Domestic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tuition Fees:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 14\n        }, this), \" $\", selectedUniversity.fees[studentType]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Intake Months:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 14\n        }, this), \" \", selectedUniversity.intakes.join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Application Deadline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }, this), \" \", selectedUniversity.applicationDeadlines]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Eligibility:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 14\n        }, this), \" \", selectedUniversity.eligibility[studentType]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), selectedUniversity.courseLinks[selectedSubject] && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Course Link:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: selectedUniversity.courseLinks[selectedSubject],\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Visit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: tableRef,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [selectedSubject, \" - QS Rankings (Last 5 Years)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"QS Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"GPA Cutoff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"SAT Cutoff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: (selectedUniversity.subjectData[selectedSubject] || []).map((d, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: d.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: d.qsRank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: d.gpaCutoff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: d.satCutoff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadExcel,\n        children: \"Download Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadPDF,\n        children: \"Download as PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"GPA to CGPA Converter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter GPA (out of 10): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: gpa,\n        onChange: e => setGpa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Converted GPA (out of 4): \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: handleConvertGpa()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Student Inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"GPA: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: gpa,\n        onChange: e => setGpa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"SAT: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sat,\n        onChange: e => setSat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Predicted Admission Probability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 14\n        }, this), \" \", getAdmissionProbability()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mWoGglKbN9Qnfrdr795lP1LxEEs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","saveAs","XLSX","jsPDF","html2canvas","jsxDEV","_jsxDEV","universities","App","_s","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","studentType","setStudentType","gpa","setGpa","sat","setSat","tableRef","handleUniversityChange","e","uni","find","u","name","target","value","subjects","handleConvertGpa","converted","parseFloat","toFixed","getAdmissionProbability","g","s","parseInt","isNaN","handleDownloadExcel","alert","data","subjectData","length","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","handleDownloadPDF","input","current","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","imgHeight","height","width","addImage","save","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","i","generalRank","subj","fees","intakes","join","applicationDeadlines","eligibility","courseLinks","href","rel","ref","border","cellPadding","d","year","qsRank","gpaCutoff","satCutoff","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\n// Define data at the top\r\nconst universities = [/* (MIT data same as before, omitted here for brevity) */];\r\n\r\nconst App = () => {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  const [studentType, setStudentType] = useState(\"international\");\r\n  const [gpa, setGpa] = useState(\"\");\r\n  const [sat, setSat] = useState(\"\");\r\n\r\n  const tableRef = useRef();\r\n\r\n  const handleUniversityChange = (e) => {\r\n    const uni = universities.find((u) => u.name === e.target.value);\r\n    setSelectedUniversity(uni);\r\n    setSelectedSubject(uni?.subjects[0] || \"\");\r\n  };\r\n\r\n  const handleConvertGpa = () => {\r\n    if (!gpa) return \"\";\r\n    const converted = (parseFloat(gpa) / 10) * 4;\r\n    return converted.toFixed(2);\r\n  };\r\n\r\n  const getAdmissionProbability = () => {\r\n    const g = parseFloat(gpa);\r\n    const s = parseInt(sat);\r\n    if (isNaN(g) || isNaN(s)) return \"Enter GPA and SAT\";\r\n    if (g >= 3.8 && s >= 1500) return \"High\";\r\n    if (g >= 3.5 && s >= 1400) return \"Moderate\";\r\n    if (g >= 3.0 && s >= 1300) return \"Low\";\r\n    return \"Very Low\";\r\n  };\r\n\r\n  const handleDownloadExcel = () => {\r\n    if (!selectedUniversity || !selectedSubject) {\r\n      alert(\"Please select both University and Subject first.\");\r\n      return;\r\n    }\r\n    const data = selectedUniversity.subjectData[selectedSubject];\r\n    if (!data || data.length === 0) {\r\n      alert(\"No data available for selected subject.\");\r\n      return;\r\n    }\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Subject Rankings\");\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const blob = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n    saveAs(blob, `${selectedSubject}_QS_Data.xlsx`);\r\n  };\r\n\r\n  const handleDownloadPDF = async () => {\r\n    if (!selectedUniversity || !selectedSubject) {\r\n      alert(\"Please select both University and Subject first.\");\r\n      return;\r\n    }\r\n\r\n    const input = tableRef.current;\r\n    const canvas = await html2canvas(input);\r\n    const imgData = canvas.toDataURL(\"image/png\");\r\n\r\n    const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n    const imgProps = pdf.getImageProperties(imgData);\r\n    const pdfWidth = pdf.internal.pageSize.getWidth();\r\n    const imgHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n\r\n    pdf.addImage(imgData, \"PNG\", 0, 10, pdfWidth, imgHeight);\r\n    pdf.save(`${selectedSubject}_QS_Data.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>QS World University Rankings</h2>\r\n\r\n      <label>Select University: </label>\r\n      <select onChange={handleUniversityChange}>\r\n        <option value=\"\">Select</option>\r\n        {universities.map((u, i) => (\r\n          <option key={i} value={u.name}>{u.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedUniversity && (\r\n        <div>\r\n          <p><strong>General QS Rank:</strong> {selectedUniversity.generalRank}</p>\r\n\r\n          <label>Select Subject: </label>\r\n          <select\r\n            value={selectedSubject}\r\n            onChange={(e) => setSelectedSubject(e.target.value)}\r\n          >\r\n            {selectedUniversity.subjects.map((subj, i) => (\r\n              <option key={i}>{subj}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <label>Student Type: </label>\r\n          <select\r\n            value={studentType}\r\n            onChange={(e) => setStudentType(e.target.value)}\r\n          >\r\n            <option value=\"international\">International</option>\r\n            <option value=\"domestic\">Domestic</option>\r\n          </select>\r\n\r\n          <p><strong>Tuition Fees:</strong> ${selectedUniversity.fees[studentType]}</p>\r\n          <p><strong>Intake Months:</strong> {selectedUniversity.intakes.join(\", \")}</p>\r\n          <p><strong>Application Deadline:</strong> {selectedUniversity.applicationDeadlines}</p>\r\n          <p><strong>Eligibility:</strong> {selectedUniversity.eligibility[studentType]}</p>\r\n\r\n          {selectedUniversity.courseLinks[selectedSubject] && (\r\n            <p>\r\n              <strong>Course Link:</strong>{\" \"}\r\n              <a\r\n                href={selectedUniversity.courseLinks[selectedSubject]}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Visit\r\n              </a>\r\n            </p>\r\n          )}\r\n\r\n          <div ref={tableRef}>\r\n            <h4>{selectedSubject} - QS Rankings (Last 5 Years)</h4>\r\n            <table border=\"1\" cellPadding=\"5\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Year</th>\r\n                  <th>QS Rank</th>\r\n                  <th>GPA Cutoff</th>\r\n                  <th>SAT Cutoff</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {(selectedUniversity.subjectData[selectedSubject] || []).map((d, i) => (\r\n                  <tr key={i}>\r\n                    <td>{d.year}</td>\r\n                    <td>{d.qsRank}</td>\r\n                    <td>{d.gpaCutoff}</td>\r\n                    <td>{d.satCutoff}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <br />\r\n          <button onClick={handleDownloadExcel}>Download Excel</button>{\" \"}\r\n          <button onClick={handleDownloadPDF}>Download as PDF</button>\r\n\r\n          <h4>GPA to CGPA Converter</h4>\r\n          <label>Enter GPA (out of 10): </label>\r\n          <input\r\n            type=\"number\"\r\n            value={gpa}\r\n            onChange={(e) => setGpa(e.target.value)}\r\n          />\r\n          <p>Converted GPA (out of 4): <strong>{handleConvertGpa()}</strong></p>\r\n\r\n          <h4>Student Inputs</h4>\r\n          <label>GPA: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={gpa}\r\n            onChange={(e) => setGpa(e.target.value)}\r\n          />\r\n          <br />\r\n          <label>SAT: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={sat}\r\n            onChange={(e) => setSat(e.target.value)}\r\n          />\r\n          <p><strong>Predicted Admission Probability:</strong> {getAdmissionProbability()}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}