{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Restored complete working version with all MIT subjects, eligibility criteria, admission predictor, CGPA to GPA converter, QS general ranking, and 5-year subject data table\n\nimport React, { useState } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst universities = [{\n  name: \"Massachusetts Institute of Technology (MIT)\",\n  generalRank: 1,\n  subjects: [\"Computer Science\", \"Mathematics\", \"Engineering\", \"Physics\", \"Chemistry\", \"Biology\", \"Economics\", \"Architecture\", \"Linguistics\", \"Political Science\", \"Philosophy\"],\n  fees: {\n    international: 55000,\n    domestic: 20000\n  },\n  intakes: [\"January\", \"September\"],\n  applicationDeadlines: \"March 15\",\n  subjectData: {\n    \"Computer Science\": [{\n      year: 2025,\n      qsRank: 1,\n      gpaCutoff: 3.8,\n      satCutoff: 1500\n    }, {\n      year: 2024,\n      qsRank: 1,\n      gpaCutoff: 3.7,\n      satCutoff: 1480\n    }, {\n      year: 2023,\n      qsRank: 2,\n      gpaCutoff: 3.7,\n      satCutoff: 1450\n    }, {\n      year: 2022,\n      qsRank: 1,\n      gpaCutoff: 3.6,\n      satCutoff: 1430\n    }, {\n      year: 2021,\n      qsRank: 1,\n      gpaCutoff: 3.6,\n      satCutoff: 1400\n    }],\n    \"Mathematics\": [{\n      year: 2025,\n      qsRank: 2,\n      gpaCutoff: 3.7,\n      satCutoff: 1470\n    }, {\n      year: 2024,\n      qsRank: 2,\n      gpaCutoff: 3.7,\n      satCutoff: 1450\n    }, {\n      year: 2023,\n      qsRank: 3,\n      gpaCutoff: 3.6,\n      satCutoff: 1420\n    }, {\n      year: 2022,\n      qsRank: 2,\n      gpaCutoff: 3.5,\n      satCutoff: 1400\n    }, {\n      year: 2021,\n      qsRank: 2,\n      gpaCutoff: 3.5,\n      satCutoff: 1380\n    }]\n  }\n}];\nfunction App() {\n  _s();\n  var _selectedUniversity$s, _selectedUniversity$s2, _selectedUniversity$s3;\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [studentType, setStudentType] = useState(\"international\");\n  const [cgpa, setCgpa] = useState(8.5);\n  const [sat, setSat] = useState(1450);\n  const convertCGPAToGPA = cgpa => cgpa / 10 * 4;\n  const getAdmissionProbability = subjectInfo => {\n    const gpa = convertCGPAToGPA(cgpa);\n    if (!subjectInfo || subjectInfo.length === 0) return \"-\";\n    const latest = subjectInfo[0];\n    if (gpa >= latest.gpaCutoff && sat >= latest.satCutoff) return \"High\";\n    if (gpa >= latest.gpaCutoff - 0.2 || sat >= latest.satCutoff - 30) return \"Medium\";\n    return \"Low\";\n  };\n  const exportToExcel = () => {\n    const data = [[\"University\", selectedUniversity.name], [\"QS General Rank\", selectedUniversity.generalRank], [\"Subject\", selectedSubject], [\"Student Type\", studentType], [\"Fees\", selectedUniversity.fees[studentType]], [\"Intakes\", selectedUniversity.intakes.join(\", \")], [\"Application Deadlines\", selectedUniversity.applicationDeadlines], [\"Admission Probability\", getAdmissionProbability(selectedUniversity.subjectData[selectedSubject])], [\"Year\", \"QS Subject Rank\", \"GPA Cutoff\", \"SAT Cutoff\"], ...selectedUniversity.subjectData[selectedSubject].map(entry => [entry.year, entry.qsRank, entry.gpaCutoff, entry.satCutoff])];\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Report\");\n    XLSX.writeFile(workbook, \"University_Report.xlsx\");\n  };\n  const exportToPDF = () => {\n    const text = `University: ${selectedUniversity.name}\\nQS General Rank: ${selectedUniversity.generalRank}\\nSubject: ${selectedSubject}\\nStudent Type: ${studentType}\\nFees: $${selectedUniversity.fees[studentType]}\\nIntakes: ${selectedUniversity.intakes.join(\", \")}\\nApplication Deadlines: ${selectedUniversity.applicationDeadlines}\\nAdmission Probability: ${getAdmissionProbability(selectedUniversity.subjectData[selectedSubject])}`;\n    const blob = new Blob([text], {\n      type: \"application/pdf\"\n    });\n    saveAs(blob, \"University_Report.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QS University Rankings App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select University:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        const uni = universities.find(u => u.name === e.target.value);\n        setSelectedUniversity(uni);\n        setSelectedSubject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), universities.map((u, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u.name,\n        children: u.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), selectedUniversity && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedUniversity.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"QS General Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 14\n        }, this), \" #\", selectedUniversity.generalRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Subject:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubject(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), selectedUniversity.subjects.map((s, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          children: s\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Student Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: studentType,\n          onChange: e => setStudentType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"international\",\n            children: \"International\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"domestic\",\n            children: \"Domestic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CGPA: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: cgpa,\n          onChange: e => setCgpa(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \\u2192 GPA: \", convertCGPAToGPA(cgpa).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SAT Score: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sat,\n          onChange: e => setSat(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), selectedSubject && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fees:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 18\n          }, this), \" $\", selectedUniversity.fees[studentType]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Intakes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 18\n          }, this), \" \", selectedUniversity.intakes.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Application Deadlines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 18\n          }, this), \" \", selectedUniversity.applicationDeadlines]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Admission Probability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 18\n          }, this), \" \", getAdmissionProbability(selectedUniversity.subjectData[selectedSubject])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Eligibility Criteria (Latest Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"QS Subject Rank:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this), \" \", (_selectedUniversity$s = selectedUniversity.subjectData[selectedSubject][0]) === null || _selectedUniversity$s === void 0 ? void 0 : _selectedUniversity$s.qsRank]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Minimum GPA:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this), \" \", (_selectedUniversity$s2 = selectedUniversity.subjectData[selectedSubject][0]) === null || _selectedUniversity$s2 === void 0 ? void 0 : _selectedUniversity$s2.gpaCutoff]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Minimum SAT:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this), \" \", (_selectedUniversity$s3 = selectedUniversity.subjectData[selectedSubject][0]) === null || _selectedUniversity$s3 === void 0 ? void 0 : _selectedUniversity$s3.satCutoff]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"QS Rankings & Cutoffs (Last 5 Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"QS Subject Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"GPA Cutoff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"SAT Cutoff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: selectedUniversity.subjectData[selectedSubject].map((entry, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.qsRank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.gpaCutoff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: entry.satCutoff\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportToPDF,\n            children: \"Save as PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportToExcel,\n            children: \"Save as Excel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GID5CswfZo0ZasDwJ/bu1c5MGs0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","saveAs","XLSX","jsxDEV","_jsxDEV","universities","name","generalRank","subjects","fees","international","domestic","intakes","applicationDeadlines","subjectData","year","qsRank","gpaCutoff","satCutoff","App","_s","_selectedUniversity$s","_selectedUniversity$s2","_selectedUniversity$s3","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","studentType","setStudentType","cgpa","setCgpa","sat","setSat","convertCGPAToGPA","getAdmissionProbability","subjectInfo","gpa","length","latest","exportToExcel","data","join","map","entry","worksheet","utils","aoa_to_sheet","workbook","book_new","book_append_sheet","writeFile","exportToPDF","text","blob","Blob","type","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","uni","find","u","target","value","i","marginTop","s","parseFloat","toFixed","parseInt","border","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["// Restored complete working version with all MIT subjects, eligibility criteria, admission predictor, CGPA to GPA converter, QS general ranking, and 5-year subject data table\r\n\r\nimport React, { useState } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst universities = [\r\n  {\r\n    name: \"Massachusetts Institute of Technology (MIT)\",\r\n    generalRank: 1,\r\n    subjects: [\r\n      \"Computer Science\",\r\n      \"Mathematics\",\r\n      \"Engineering\",\r\n      \"Physics\",\r\n      \"Chemistry\",\r\n      \"Biology\",\r\n      \"Economics\",\r\n      \"Architecture\",\r\n      \"Linguistics\",\r\n      \"Political Science\",\r\n      \"Philosophy\"\r\n    ],\r\n    fees: {\r\n      international: 55000,\r\n      domestic: 20000\r\n    },\r\n    intakes: [\"January\", \"September\"],\r\n    applicationDeadlines: \"March 15\",\r\n    subjectData: {\r\n      \"Computer Science\": [\r\n        { year: 2025, qsRank: 1, gpaCutoff: 3.8, satCutoff: 1500 },\r\n        { year: 2024, qsRank: 1, gpaCutoff: 3.7, satCutoff: 1480 },\r\n        { year: 2023, qsRank: 2, gpaCutoff: 3.7, satCutoff: 1450 },\r\n        { year: 2022, qsRank: 1, gpaCutoff: 3.6, satCutoff: 1430 },\r\n        { year: 2021, qsRank: 1, gpaCutoff: 3.6, satCutoff: 1400 }\r\n      ],\r\n      \"Mathematics\": [\r\n        { year: 2025, qsRank: 2, gpaCutoff: 3.7, satCutoff: 1470 },\r\n        { year: 2024, qsRank: 2, gpaCutoff: 3.7, satCutoff: 1450 },\r\n        { year: 2023, qsRank: 3, gpaCutoff: 3.6, satCutoff: 1420 },\r\n        { year: 2022, qsRank: 2, gpaCutoff: 3.5, satCutoff: 1400 },\r\n        { year: 2021, qsRank: 2, gpaCutoff: 3.5, satCutoff: 1380 }\r\n      ]\r\n    }\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [studentType, setStudentType] = useState(\"international\");\r\n  const [cgpa, setCgpa] = useState(8.5);\r\n  const [sat, setSat] = useState(1450);\r\n\r\n  const convertCGPAToGPA = (cgpa) => (cgpa / 10) * 4;\r\n\r\n  const getAdmissionProbability = (subjectInfo) => {\r\n    const gpa = convertCGPAToGPA(cgpa);\r\n    if (!subjectInfo || subjectInfo.length === 0) return \"-\";\r\n    const latest = subjectInfo[0];\r\n    if (gpa >= latest.gpaCutoff && sat >= latest.satCutoff) return \"High\";\r\n    if (gpa >= latest.gpaCutoff - 0.2 || sat >= latest.satCutoff - 30) return \"Medium\";\r\n    return \"Low\";\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const data = [\r\n      [\"University\", selectedUniversity.name],\r\n      [\"QS General Rank\", selectedUniversity.generalRank],\r\n      [\"Subject\", selectedSubject],\r\n      [\"Student Type\", studentType],\r\n      [\"Fees\", selectedUniversity.fees[studentType]],\r\n      [\"Intakes\", selectedUniversity.intakes.join(\", \")],\r\n      [\"Application Deadlines\", selectedUniversity.applicationDeadlines],\r\n      [\"Admission Probability\", getAdmissionProbability(selectedUniversity.subjectData[selectedSubject])],\r\n      [\"Year\", \"QS Subject Rank\", \"GPA Cutoff\", \"SAT Cutoff\"],\r\n      ...selectedUniversity.subjectData[selectedSubject].map((entry) => [\r\n        entry.year,\r\n        entry.qsRank,\r\n        entry.gpaCutoff,\r\n        entry.satCutoff\r\n      ])\r\n    ];\r\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Report\");\r\n    XLSX.writeFile(workbook, \"University_Report.xlsx\");\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const text = `University: ${selectedUniversity.name}\\nQS General Rank: ${selectedUniversity.generalRank}\\nSubject: ${selectedSubject}\\nStudent Type: ${studentType}\\nFees: $${selectedUniversity.fees[studentType]}\\nIntakes: ${selectedUniversity.intakes.join(\", \")}\\nApplication Deadlines: ${selectedUniversity.applicationDeadlines}\\nAdmission Probability: ${getAdmissionProbability(selectedUniversity.subjectData[selectedSubject])}`;\r\n    const blob = new Blob([text], { type: \"application/pdf\" });\r\n    saveAs(blob, \"University_Report.pdf\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h1>QS University Rankings App</h1>\r\n      <label>Select University:</label>\r\n      <select onChange={(e) => {\r\n        const uni = universities.find((u) => u.name === e.target.value);\r\n        setSelectedUniversity(uni);\r\n        setSelectedSubject(null);\r\n      }}>\r\n        <option>Select</option>\r\n        {universities.map((u, i) => (\r\n          <option key={i} value={u.name}>{u.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedUniversity && (\r\n        <div style={{ marginTop: 20 }}>\r\n          <h2>{selectedUniversity.name}</h2>\r\n          <p><strong>QS General Rank:</strong> #{selectedUniversity.generalRank}</p>\r\n          <label>Select Subject:</label>\r\n          <select onChange={(e) => setSelectedSubject(e.target.value)}>\r\n            <option>Select</option>\r\n            {selectedUniversity.subjects.map((s, i) => (\r\n              <option key={i} value={s}>{s}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <div style={{ marginTop: 10 }}>\r\n            <label>Student Type: </label>\r\n            <select value={studentType} onChange={(e) => setStudentType(e.target.value)}>\r\n              <option value=\"international\">International</option>\r\n              <option value=\"domestic\">Domestic</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div style={{ marginTop: 10 }}>\r\n            <label>CGPA: </label>\r\n            <input type=\"number\" value={cgpa} onChange={(e) => setCgpa(parseFloat(e.target.value))} />\r\n            <span> → GPA: {convertCGPAToGPA(cgpa).toFixed(2)}</span>\r\n          </div>\r\n\r\n          <div style={{ marginTop: 10 }}>\r\n            <label>SAT Score: </label>\r\n            <input type=\"number\" value={sat} onChange={(e) => setSat(parseInt(e.target.value))} />\r\n          </div>\r\n\r\n          {selectedSubject && (\r\n            <div style={{ marginTop: 20 }}>\r\n              <p><strong>Fees:</strong> ${selectedUniversity.fees[studentType]}</p>\r\n              <p><strong>Intakes:</strong> {selectedUniversity.intakes.join(\", \")}</p>\r\n              <p><strong>Application Deadlines:</strong> {selectedUniversity.applicationDeadlines}</p>\r\n              <p><strong>Admission Probability:</strong> {getAdmissionProbability(selectedUniversity.subjectData[selectedSubject])}</p>\r\n              <h3>Eligibility Criteria (Latest Year)</h3>\r\n              <ul>\r\n                <li><strong>QS Subject Rank:</strong> {selectedUniversity.subjectData[selectedSubject][0]?.qsRank}</li>\r\n                <li><strong>Minimum GPA:</strong> {selectedUniversity.subjectData[selectedSubject][0]?.gpaCutoff}</li>\r\n                <li><strong>Minimum SAT:</strong> {selectedUniversity.subjectData[selectedSubject][0]?.satCutoff}</li>\r\n              </ul>\r\n              <h3>QS Rankings & Cutoffs (Last 5 Years)</h3>\r\n              <table border=\"1\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Year</th>\r\n                    <th>QS Subject Rank</th>\r\n                    <th>GPA Cutoff</th>\r\n                    <th>SAT Cutoff</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {selectedUniversity.subjectData[selectedSubject].map((entry, i) => (\r\n                    <tr key={i}>\r\n                      <td>{entry.year}</td>\r\n                      <td>{entry.qsRank}</td>\r\n                      <td>{entry.gpaCutoff}</td>\r\n                      <td>{entry.satCutoff}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div style={{ marginTop: 10 }}>\r\n                <button onClick={exportToPDF}>Save as PDF</button>\r\n                <button onClick={exportToExcel}>Save as Excel</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}