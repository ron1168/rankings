{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst universities = [{\n  name: \"Massachusetts Institute of Technology (MIT)\",\n  qsGeneralRank: 1,\n  subjects: [{\n    name: \"Computer Science\",\n    qsRankings: [1, 1, 2, 1, 1],\n    gpaCutoffs: [3.8, 3.7, 3.7, 3.6, 3.6],\n    satCutoffs: [1500, 1480, 1450, 1430, 1400],\n    fees: {\n      international: \"$53,790\",\n      domestic: \"$53,790\"\n    },\n    intakes: \"September, February\",\n    deadlines: \"Jan 15 (Fall), Oct 1 (Spring)\"\n  }, {\n    name: \"Mathematics\",\n    qsRankings: [1, 1, 1, 1, 1],\n    gpaCutoffs: [3.7, 3.6, 3.6, 3.5, 3.5],\n    satCutoffs: [1480, 1450, 1420, 1400, 1380],\n    fees: {\n      international: \"$53,790\",\n      domestic: \"$53,790\"\n    },\n    intakes: \"September\",\n    deadlines: \"Jan 15\"\n  }, {\n    name: \"Engineering\",\n    qsRankings: [1, 2, 1, 1, 2],\n    gpaCutoffs: [3.9, 3.8, 3.7, 3.7, 3.6],\n    satCutoffs: [1520, 1500, 1480, 1450, 1430],\n    fees: {\n      international: \"$55,000\",\n      domestic: \"$55,000\"\n    },\n    intakes: \"September\",\n    deadlines: \"Jan 10\"\n  }, {\n    name: \"Physics\",\n    qsRankings: [2, 2, 2, 2, 2],\n    gpaCutoffs: [3.6, 3.6, 3.5, 3.5, 3.4],\n    satCutoffs: [1470, 1450, 1430, 1400, 1380],\n    fees: {\n      international: \"$54,000\",\n      domestic: \"$54,000\"\n    },\n    intakes: \"September\",\n    deadlines: \"Jan 10\"\n  }, {\n    name: \"Biology\",\n    qsRankings: [3, 3, 3, 3, 3],\n    gpaCutoffs: [3.5, 3.4, 3.4, 3.3, 3.3],\n    satCutoffs: [1450, 1430, 1400, 1380, 1350],\n    fees: {\n      international: \"$53,000\",\n      domestic: \"$53,000\"\n    },\n    intakes: \"September\",\n    deadlines: \"Jan 15\"\n  }]\n}, {\n  name: \"Stanford University\",\n  qsGeneralRank: 2,\n  subjects: [{\n    name: \"Computer Science\",\n    qsRankings: [2, 2, 1, 2, 1],\n    gpaCutoffs: [3.9, 3.8, 3.8, 3.7, 3.7],\n    satCutoffs: [1510, 1490, 1470, 1450, 1420],\n    fees: {\n      international: \"$56,169\",\n      domestic: \"$56,169\"\n    },\n    intakes: \"September\",\n    deadlines: \"Dec 1\"\n  }, {\n    name: \"Physics\",\n    qsRankings: [3, 3, 3, 3, 3],\n    gpaCutoffs: [3.7, 3.6, 3.6, 3.5, 3.5],\n    satCutoffs: [1460, 1440, 1420, 1400, 1380],\n    fees: {\n      international: \"$55,000\",\n      domestic: \"$55,000\"\n    },\n    intakes: \"September\",\n    deadlines: \"Dec 15\"\n  }, {\n    name: \"Business\",\n    qsRankings: [1, 1, 1, 1, 1],\n    gpaCutoffs: [3.8, 3.7, 3.7, 3.6, 3.6],\n    satCutoffs: [1500, 1480, 1460, 1440, 1420],\n    fees: {\n      international: \"$57,000\",\n      domestic: \"$57,000\"\n    },\n    intakes: \"September\",\n    deadlines: \"Jan 15\"\n  }]\n}];\nfunction App() {\n  _s();\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [studentType, setStudentType] = useState(\"international\");\n  const [cgpa, setCgpa] = useState(0);\n  const [sat, setSat] = useState(0);\n  const handleSaveReport = () => {\n    const doc = new jsPDF();\n    const title = `${selectedUniversity.name} - ${selectedSubject.name} Report`;\n    doc.text(title, 10, 10);\n    doc.text(`QS General Rank: ${selectedUniversity.qsGeneralRank}`, 10, 20);\n    doc.text(`Subject: ${selectedSubject.name}`, 10, 30);\n    doc.text(`QS Subject Ranks (2025-2021): ${selectedSubject.qsRankings.join(\", \")}`, 10, 40);\n    doc.text(`GPA Cutoffs (2025-2021): ${selectedSubject.gpaCutoffs.join(\", \")}`, 10, 50);\n    doc.text(`SAT Cutoffs (2025-2021): ${selectedSubject.satCutoffs.join(\", \")}`, 10, 60);\n    doc.text(`Fees: ${selectedSubject.fees[studentType]}`, 10, 70);\n    doc.text(`Intakes: ${selectedSubject.intakes}`, 10, 80);\n    doc.text(`Deadlines: ${selectedSubject.deadlines}`, 10, 90);\n    doc.save(\"report.pdf\");\n  };\n  const handleExportExcel = () => {\n    const ws = XLSX.utils.json_to_sheet([{\n      University: selectedUniversity.name,\n      Subject: selectedSubject.name,\n      QS_General_Rank: selectedUniversity.qsGeneralRank,\n      QS_Subject_Ranks: selectedSubject.qsRankings.join(\", \"),\n      GPA_Cutoffs: selectedSubject.gpaCutoffs.join(\", \"),\n      SAT_Cutoffs: selectedSubject.satCutoffs.join(\", \"),\n      Fees: selectedSubject.fees[studentType],\n      Intakes: selectedSubject.intakes,\n      Deadlines: selectedSubject.deadlines\n    }]);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Report\");\n    XLSX.writeFile(wb, \"report.xlsx\");\n  };\n  const calculateAdmissionProbability = () => {\n    if (!selectedSubject) return null;\n    const gpaMatch = cgpa >= selectedSubject.gpaCutoffs[0];\n    const satMatch = sat >= selectedSubject.satCutoffs[0];\n    if (gpaMatch && satMatch) return \"High\";\n    if (gpaMatch || satMatch) return \"Moderate\";\n    return \"Low\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QS University Admissions Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select University: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => {\n        const uni = universities.find(u => u.name === e.target.value);\n        setSelectedUniversity(uni);\n        setSelectedSubject(null);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), universities.map(uni => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: uni.name,\n        children: uni.name\n      }, uni.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), selectedUniversity && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedUniversity.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"QS General Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 14\n        }, this), \" #\", selectedUniversity.qsGeneralRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          const sub = selectedUniversity.subjects.find(s => s.name === e.target.value);\n          setSelectedSubject(sub);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), selectedUniversity.subjects.map(subj => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subj.name,\n          children: subj.name\n        }, subj.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), selectedSubject && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedSubject.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Student Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setStudentType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"international\",\n            children: \"International\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"domestic\",\n            children: \"Domestic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fees:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 18\n          }, this), \" \", selectedSubject.fees[studentType]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Intakes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 18\n          }, this), \" \", selectedSubject.intakes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Application Deadlines:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 18\n          }, this), \" \", selectedSubject.deadlines]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          border: \"1\",\n          cellPadding: \"5\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"QS Subject Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"GPA Cutoff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"SAT Cutoff\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [2025, 2024, 2023, 2022, 2021].map((year, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: selectedSubject.qsRankings[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: selectedSubject.gpaCutoffs[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: selectedSubject.satCutoffs[index]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)]\n            }, year, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter CGPA: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.1\",\n            onChange: e => setCgpa(parseFloat(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter SAT Score: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => setSat(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Admission Probability:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 20\n            }, this), \" \", calculateAdmissionProbability()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveReport,\n          children: \"Save as PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExportExcel,\n          children: \"Export to Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y/5MiV37V1IZFeYWktq1MyxqLDg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsPDF","XLSX","jsxDEV","_jsxDEV","universities","name","qsGeneralRank","subjects","qsRankings","gpaCutoffs","satCutoffs","fees","international","domestic","intakes","deadlines","App","_s","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","studentType","setStudentType","cgpa","setCgpa","sat","setSat","handleSaveReport","doc","title","text","join","save","handleExportExcel","ws","utils","json_to_sheet","University","Subject","QS_General_Rank","QS_Subject_Ranks","GPA_Cutoffs","SAT_Cutoffs","Fees","Intakes","Deadlines","wb","book_new","book_append_sheet","writeFile","calculateAdmissionProbability","gpaMatch","satMatch","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","uni","find","u","target","value","map","sub","s","subj","border","cellPadding","year","index","type","step","parseFloat","parseInt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst universities = [\r\n  {\r\n    name: \"Massachusetts Institute of Technology (MIT)\",\r\n    qsGeneralRank: 1,\r\n    subjects: [\r\n      {\r\n        name: \"Computer Science\",\r\n        qsRankings: [1, 1, 2, 1, 1],\r\n        gpaCutoffs: [3.8, 3.7, 3.7, 3.6, 3.6],\r\n        satCutoffs: [1500, 1480, 1450, 1430, 1400],\r\n        fees: { international: \"$53,790\", domestic: \"$53,790\" },\r\n        intakes: \"September, February\",\r\n        deadlines: \"Jan 15 (Fall), Oct 1 (Spring)\"\r\n      },\r\n      {\r\n        name: \"Mathematics\",\r\n        qsRankings: [1, 1, 1, 1, 1],\r\n        gpaCutoffs: [3.7, 3.6, 3.6, 3.5, 3.5],\r\n        satCutoffs: [1480, 1450, 1420, 1400, 1380],\r\n        fees: { international: \"$53,790\", domestic: \"$53,790\" },\r\n        intakes: \"September\",\r\n        deadlines: \"Jan 15\"\r\n      },\r\n      {\r\n        name: \"Engineering\",\r\n        qsRankings: [1, 2, 1, 1, 2],\r\n        gpaCutoffs: [3.9, 3.8, 3.7, 3.7, 3.6],\r\n        satCutoffs: [1520, 1500, 1480, 1450, 1430],\r\n        fees: { international: \"$55,000\", domestic: \"$55,000\" },\r\n        intakes: \"September\",\r\n        deadlines: \"Jan 10\"\r\n      },\r\n      {\r\n        name: \"Physics\",\r\n        qsRankings: [2, 2, 2, 2, 2],\r\n        gpaCutoffs: [3.6, 3.6, 3.5, 3.5, 3.4],\r\n        satCutoffs: [1470, 1450, 1430, 1400, 1380],\r\n        fees: { international: \"$54,000\", domestic: \"$54,000\" },\r\n        intakes: \"September\",\r\n        deadlines: \"Jan 10\"\r\n      },\r\n      {\r\n        name: \"Biology\",\r\n        qsRankings: [3, 3, 3, 3, 3],\r\n        gpaCutoffs: [3.5, 3.4, 3.4, 3.3, 3.3],\r\n        satCutoffs: [1450, 1430, 1400, 1380, 1350],\r\n        fees: { international: \"$53,000\", domestic: \"$53,000\" },\r\n        intakes: \"September\",\r\n        deadlines: \"Jan 15\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: \"Stanford University\",\r\n    qsGeneralRank: 2,\r\n    subjects: [\r\n      {\r\n        name: \"Computer Science\",\r\n        qsRankings: [2, 2, 1, 2, 1],\r\n        gpaCutoffs: [3.9, 3.8, 3.8, 3.7, 3.7],\r\n        satCutoffs: [1510, 1490, 1470, 1450, 1420],\r\n        fees: { international: \"$56,169\", domestic: \"$56,169\" },\r\n        intakes: \"September\",\r\n        deadlines: \"Dec 1\"\r\n      },\r\n      {\r\n        name: \"Physics\",\r\n        qsRankings: [3, 3, 3, 3, 3],\r\n        gpaCutoffs: [3.7, 3.6, 3.6, 3.5, 3.5],\r\n        satCutoffs: [1460, 1440, 1420, 1400, 1380],\r\n        fees: { international: \"$55,000\", domestic: \"$55,000\" },\r\n        intakes: \"September\",\r\n        deadlines: \"Dec 15\"\r\n      },\r\n      {\r\n        name: \"Business\",\r\n        qsRankings: [1, 1, 1, 1, 1],\r\n        gpaCutoffs: [3.8, 3.7, 3.7, 3.6, 3.6],\r\n        satCutoffs: [1500, 1480, 1460, 1440, 1420],\r\n        fees: { international: \"$57,000\", domestic: \"$57,000\" },\r\n        intakes: \"September\",\r\n        deadlines: \"Jan 15\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(null);\r\n  const [studentType, setStudentType] = useState(\"international\");\r\n  const [cgpa, setCgpa] = useState(0);\r\n  const [sat, setSat] = useState(0);\r\n\r\n  const handleSaveReport = () => {\r\n    const doc = new jsPDF();\r\n    const title = `${selectedUniversity.name} - ${selectedSubject.name} Report`;\r\n    doc.text(title, 10, 10);\r\n    doc.text(`QS General Rank: ${selectedUniversity.qsGeneralRank}`, 10, 20);\r\n    doc.text(`Subject: ${selectedSubject.name}`, 10, 30);\r\n    doc.text(`QS Subject Ranks (2025-2021): ${selectedSubject.qsRankings.join(\", \")}`, 10, 40);\r\n    doc.text(`GPA Cutoffs (2025-2021): ${selectedSubject.gpaCutoffs.join(\", \")}`, 10, 50);\r\n    doc.text(`SAT Cutoffs (2025-2021): ${selectedSubject.satCutoffs.join(\", \")}`, 10, 60);\r\n    doc.text(`Fees: ${selectedSubject.fees[studentType]}`, 10, 70);\r\n    doc.text(`Intakes: ${selectedSubject.intakes}`, 10, 80);\r\n    doc.text(`Deadlines: ${selectedSubject.deadlines}`, 10, 90);\r\n    doc.save(\"report.pdf\");\r\n  };\r\n\r\n  const handleExportExcel = () => {\r\n    const ws = XLSX.utils.json_to_sheet([\r\n      {\r\n        University: selectedUniversity.name,\r\n        Subject: selectedSubject.name,\r\n        QS_General_Rank: selectedUniversity.qsGeneralRank,\r\n        QS_Subject_Ranks: selectedSubject.qsRankings.join(\", \"),\r\n        GPA_Cutoffs: selectedSubject.gpaCutoffs.join(\", \"),\r\n        SAT_Cutoffs: selectedSubject.satCutoffs.join(\", \"),\r\n        Fees: selectedSubject.fees[studentType],\r\n        Intakes: selectedSubject.intakes,\r\n        Deadlines: selectedSubject.deadlines\r\n      }\r\n    ]);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Report\");\r\n    XLSX.writeFile(wb, \"report.xlsx\");\r\n  };\r\n\r\n  const calculateAdmissionProbability = () => {\r\n    if (!selectedSubject) return null;\r\n    const gpaMatch = cgpa >= selectedSubject.gpaCutoffs[0];\r\n    const satMatch = sat >= selectedSubject.satCutoffs[0];\r\n    if (gpaMatch && satMatch) return \"High\";\r\n    if (gpaMatch || satMatch) return \"Moderate\";\r\n    return \"Low\";\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h1>QS University Admissions Explorer</h1>\r\n      <label>Select University: </label>\r\n      <select onChange={(e) => {\r\n        const uni = universities.find((u) => u.name === e.target.value);\r\n        setSelectedUniversity(uni);\r\n        setSelectedSubject(null);\r\n      }}>\r\n        <option value=\"\">-- Select --</option>\r\n        {universities.map((uni) => (\r\n          <option key={uni.name} value={uni.name}>{uni.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedUniversity && (\r\n        <div>\r\n          <h2>{selectedUniversity.name}</h2>\r\n          <p><strong>QS General Rank:</strong> #{selectedUniversity.qsGeneralRank}</p>\r\n\r\n          <label>Select Subject: </label>\r\n          <select onChange={(e) => {\r\n            const sub = selectedUniversity.subjects.find((s) => s.name === e.target.value);\r\n            setSelectedSubject(sub);\r\n          }}>\r\n            <option value=\"\">-- Select --</option>\r\n            {selectedUniversity.subjects.map((subj) => (\r\n              <option key={subj.name} value={subj.name}>{subj.name}</option>\r\n            ))}\r\n          </select>\r\n\r\n          {selectedSubject && (\r\n            <div>\r\n              <h3>{selectedSubject.name}</h3>\r\n              <label>Student Type: </label>\r\n              <select onChange={(e) => setStudentType(e.target.value)}>\r\n                <option value=\"international\">International</option>\r\n                <option value=\"domestic\">Domestic</option>\r\n              </select>\r\n              <p><strong>Fees:</strong> {selectedSubject.fees[studentType]}</p>\r\n              <p><strong>Intakes:</strong> {selectedSubject.intakes}</p>\r\n              <p><strong>Application Deadlines:</strong> {selectedSubject.deadlines}</p>\r\n\r\n              <table border=\"1\" cellPadding=\"5\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Year</th>\r\n                    <th>QS Subject Rank</th>\r\n                    <th>GPA Cutoff</th>\r\n                    <th>SAT Cutoff</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {[2025, 2024, 2023, 2022, 2021].map((year, index) => (\r\n                    <tr key={year}>\r\n                      <td>{year}</td>\r\n                      <td>{selectedSubject.qsRankings[index]}</td>\r\n                      <td>{selectedSubject.gpaCutoffs[index]}</td>\r\n                      <td>{selectedSubject.satCutoffs[index]}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n\r\n              <div>\r\n                <label>Enter CGPA: </label>\r\n                <input type=\"number\" step=\"0.1\" onChange={(e) => setCgpa(parseFloat(e.target.value))} />\r\n                <label>Enter SAT Score: </label>\r\n                <input type=\"number\" onChange={(e) => setSat(parseInt(e.target.value))} />\r\n                <p><strong>Admission Probability:</strong> {calculateAdmissionProbability()}</p>\r\n              </div>\r\n              <button onClick={handleSaveReport}>Save as PDF</button>\r\n              <button onClick={handleExportExcel}>Export to Excel</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}