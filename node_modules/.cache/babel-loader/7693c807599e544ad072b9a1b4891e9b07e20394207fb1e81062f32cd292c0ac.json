{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\n// Sample Data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst universities = [{\n  name: \"MIT\",\n  generalQSRank: 1,\n  subjects: [\"Computer Science\", \"Mathematics\"],\n  subjectData: {\n    \"Computer Science\": [{\n      year: 2021,\n      rank: 1,\n      gpaCutoff: 3.9,\n      satCutoff: 1550,\n      fees: \"$53,790\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2022,\n      rank: 1,\n      gpaCutoff: 3.88,\n      satCutoff: 1540,\n      fees: \"$54,500\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2023,\n      rank: 1,\n      gpaCutoff: 3.9,\n      satCutoff: 1530,\n      fees: \"$55,200\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }],\n    \"Mathematics\": [{\n      year: 2021,\n      rank: 2,\n      gpaCutoff: 3.8,\n      satCutoff: 1500,\n      fees: \"$53,790\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2022,\n      rank: 2,\n      gpaCutoff: 3.85,\n      satCutoff: 1510,\n      fees: \"$54,500\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2023,\n      rank: 1,\n      gpaCutoff: 3.87,\n      satCutoff: 1520,\n      fees: \"$55,200\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }]\n  }\n}, {\n  name: \"Stanford\",\n  generalQSRank: 3,\n  subjects: [\"Computer Science\", \"Engineering\"],\n  subjectData: {\n    \"Computer Science\": [{\n      year: 2021,\n      rank: 2,\n      gpaCutoff: 3.85,\n      satCutoff: 1520,\n      fees: \"$51,354\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2022,\n      rank: 2,\n      gpaCutoff: 3.86,\n      satCutoff: 1510,\n      fees: \"$52,000\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2023,\n      rank: 2,\n      gpaCutoff: 3.87,\n      satCutoff: 1500,\n      fees: \"$52,700\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }],\n    \"Engineering\": [{\n      year: 2021,\n      rank: 3,\n      gpaCutoff: 3.7,\n      satCutoff: 1480,\n      fees: \"$51,354\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2022,\n      rank: 3,\n      gpaCutoff: 3.75,\n      satCutoff: 1490,\n      fees: \"$52,000\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }, {\n      year: 2023,\n      rank: 3,\n      gpaCutoff: 3.78,\n      satCutoff: 1500,\n      fees: \"$52,700\",\n      intake: \"Sept\",\n      eligibility: \"International\"\n    }]\n  }\n}];\nfunction App() {\n  _s();\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\n  const [gpa, setGpa] = useState(\"\");\n  const [sat, setSat] = useState(\"\");\n  const getAdmissionProbability = () => {\n    const g = parseFloat(gpa);\n    const s = parseInt(sat);\n    if (isNaN(g) || isNaN(s)) return \"Enter GPA and SAT\";\n    if (g >= 3.8 && s >= 1500) return \"High\";\n    if (g >= 3.5 && s >= 1400) return \"Moderate\";\n    if (g >= 3.0 && s >= 1300) return \"Low\";\n    return \"Very Low\";\n  };\n  const handleDownloadExcel = () => {\n    if (!selectedUniversity || !selectedSubject) {\n      alert(\"Please select both University and Subject.\");\n      return;\n    }\n    const data = selectedUniversity.subjectData[selectedSubject];\n    if (!data || data.length === 0) {\n      alert(\"No data found.\");\n      return;\n    }\n    const ws = XLSX.utils.json_to_sheet(data);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Subject Rankings\");\n    const excelBuffer = XLSX.write(wb, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const blob = new Blob([excelBuffer], {\n      type: \"application/octet-stream\"\n    });\n    saveAs(blob, `${selectedSubject}_QS_Data.xlsx`);\n  };\n  const handleDownloadPDF = () => {\n    const element = document.getElementById(\"content-to-export\");\n    if (!element) {\n      alert(\"Nothing to export.\");\n      return;\n    }\n    html2canvas(element).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(imgData, \"PNG\", 0, 0, pdfWidth, pdfHeight);\n      pdf.save(`${selectedSubject}_QS_Data.pdf`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QS University Rankings App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select University: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedUniversity(universities.find(u => u.name === e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Select --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u.name,\n        children: u.name\n      }, u.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), selectedUniversity && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"General QS Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 14\n        }, this), \" \", selectedUniversity.generalQSRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubject(e.target.value),\n        value: selectedSubject,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Subject --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), selectedUniversity.subjects.map(subject => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subject,\n          children: subject\n        }, subject, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), selectedUniversity && selectedSubject && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content-to-export\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedSubject, \" - \", selectedUniversity.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GPA Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SAT Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tuition Fees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Intake\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Eligibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedUniversity.subjectData[selectedSubject].map(entry => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.gpaCutoff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.satCutoff\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.fees\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.intake\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.eligibility\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, entry.year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Student Inputs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"GPA: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: gpa,\n        onChange: e => setGpa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"SAT: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: sat,\n        onChange: e => setSat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Predicted Admission Probability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), \" \", getAdmissionProbability()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadExcel,\n      children: \"Download Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadPDF,\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"feZ6q6ZzoBVlfY14CkcdrI/NuJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","saveAs","jsPDF","html2canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","universities","name","generalQSRank","subjects","subjectData","year","rank","gpaCutoff","satCutoff","fees","intake","eligibility","App","_s","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","gpa","setGpa","sat","setSat","getAdmissionProbability","g","parseFloat","s","parseInt","isNaN","handleDownloadExcel","alert","data","length","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","type","blob","Blob","handleDownloadPDF","element","document","getElementById","then","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","find","u","target","value","map","subject","id","border","cellPadding","entry","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { saveAs } from \"file-saver\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\n// Sample Data\r\nconst universities = [\r\n  {\r\n    name: \"MIT\",\r\n    generalQSRank: 1,\r\n    subjects: [\"Computer Science\", \"Mathematics\"],\r\n    subjectData: {\r\n      \"Computer Science\": [\r\n        { year: 2021, rank: 1, gpaCutoff: 3.9, satCutoff: 1550, fees: \"$53,790\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2022, rank: 1, gpaCutoff: 3.88, satCutoff: 1540, fees: \"$54,500\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2023, rank: 1, gpaCutoff: 3.9, satCutoff: 1530, fees: \"$55,200\", intake: \"Sept\", eligibility: \"International\" }\r\n      ],\r\n      \"Mathematics\": [\r\n        { year: 2021, rank: 2, gpaCutoff: 3.8, satCutoff: 1500, fees: \"$53,790\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2022, rank: 2, gpaCutoff: 3.85, satCutoff: 1510, fees: \"$54,500\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2023, rank: 1, gpaCutoff: 3.87, satCutoff: 1520, fees: \"$55,200\", intake: \"Sept\", eligibility: \"International\" }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Stanford\",\r\n    generalQSRank: 3,\r\n    subjects: [\"Computer Science\", \"Engineering\"],\r\n    subjectData: {\r\n      \"Computer Science\": [\r\n        { year: 2021, rank: 2, gpaCutoff: 3.85, satCutoff: 1520, fees: \"$51,354\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2022, rank: 2, gpaCutoff: 3.86, satCutoff: 1510, fees: \"$52,000\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2023, rank: 2, gpaCutoff: 3.87, satCutoff: 1500, fees: \"$52,700\", intake: \"Sept\", eligibility: \"International\" }\r\n      ],\r\n      \"Engineering\": [\r\n        { year: 2021, rank: 3, gpaCutoff: 3.7, satCutoff: 1480, fees: \"$51,354\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2022, rank: 3, gpaCutoff: 3.75, satCutoff: 1490, fees: \"$52,000\", intake: \"Sept\", eligibility: \"International\" },\r\n        { year: 2023, rank: 3, gpaCutoff: 3.78, satCutoff: 1500, fees: \"$52,700\", intake: \"Sept\", eligibility: \"International\" }\r\n      ]\r\n    }\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  const [gpa, setGpa] = useState(\"\");\r\n  const [sat, setSat] = useState(\"\");\r\n\r\n  const getAdmissionProbability = () => {\r\n    const g = parseFloat(gpa);\r\n    const s = parseInt(sat);\r\n    if (isNaN(g) || isNaN(s)) return \"Enter GPA and SAT\";\r\n    if (g >= 3.8 && s >= 1500) return \"High\";\r\n    if (g >= 3.5 && s >= 1400) return \"Moderate\";\r\n    if (g >= 3.0 && s >= 1300) return \"Low\";\r\n    return \"Very Low\";\r\n  };\r\n\r\n  const handleDownloadExcel = () => {\r\n    if (!selectedUniversity || !selectedSubject) {\r\n      alert(\"Please select both University and Subject.\");\r\n      return;\r\n    }\r\n\r\n    const data = selectedUniversity.subjectData[selectedSubject];\r\n    if (!data || data.length === 0) {\r\n      alert(\"No data found.\");\r\n      return;\r\n    }\r\n\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Subject Rankings\");\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const blob = new Blob([excelBuffer], { type: \"application/octet-stream\" });\r\n    saveAs(blob, `${selectedSubject}_QS_Data.xlsx`);\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    const element = document.getElementById(\"content-to-export\");\r\n    if (!element) {\r\n      alert(\"Nothing to export.\");\r\n      return;\r\n    }\r\n\r\n    html2canvas(element).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      const imgProps = pdf.getImageProperties(imgData);\r\n      const pdfWidth = pdf.internal.pageSize.getWidth();\r\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n      pdf.addImage(imgData, \"PNG\", 0, 0, pdfWidth, pdfHeight);\r\n      pdf.save(`${selectedSubject}_QS_Data.pdf`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>QS University Rankings App</h2>\r\n\r\n      <label>Select University: </label>\r\n      <select\r\n        onChange={(e) =>\r\n          setSelectedUniversity(universities.find((u) => u.name === e.target.value))\r\n        }\r\n      >\r\n        <option value=\"\">-- Select --</option>\r\n        {universities.map((u) => (\r\n          <option key={u.name} value={u.name}>\r\n            {u.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedUniversity && (\r\n        <>\r\n          <p><strong>General QS Rank:</strong> {selectedUniversity.generalQSRank}</p>\r\n\r\n          <label>Select Subject: </label>\r\n          <select\r\n            onChange={(e) => setSelectedSubject(e.target.value)}\r\n            value={selectedSubject}\r\n          >\r\n            <option value=\"\">-- Select Subject --</option>\r\n            {selectedUniversity.subjects.map((subject) => (\r\n              <option key={subject} value={subject}>\r\n                {subject}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      )}\r\n\r\n      <br /><br />\r\n\r\n      {selectedUniversity && selectedSubject && (\r\n        <div id=\"content-to-export\">\r\n          <h3>\r\n            {selectedSubject} - {selectedUniversity.name}\r\n          </h3>\r\n          <table border=\"1\" cellPadding=\"5\">\r\n            <thead>\r\n              <tr>\r\n                <th>Year</th>\r\n                <th>Rank</th>\r\n                <th>GPA Cutoff</th>\r\n                <th>SAT Cutoff</th>\r\n                <th>Tuition Fees</th>\r\n                <th>Intake</th>\r\n                <th>Eligibility</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {selectedUniversity.subjectData[selectedSubject].map((entry) => (\r\n                <tr key={entry.year}>\r\n                  <td>{entry.year}</td>\r\n                  <td>{entry.rank}</td>\r\n                  <td>{entry.gpaCutoff}</td>\r\n                  <td>{entry.satCutoff}</td>\r\n                  <td>{entry.fees}</td>\r\n                  <td>{entry.intake}</td>\r\n                  <td>{entry.eligibility}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <h4>Student Inputs</h4>\r\n          <label>GPA: </label>\r\n          <input type=\"text\" value={gpa} onChange={(e) => setGpa(e.target.value)} />\r\n          <br />\r\n          <label>SAT: </label>\r\n          <input type=\"text\" value={sat} onChange={(e) => setSat(e.target.value)} />\r\n          <p>\r\n            <strong>Predicted Admission Probability:</strong>{\" \"}\r\n            {getAdmissionProbability()}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <br />\r\n      <button onClick={handleDownloadExcel}>Download Excel</button>\r\n      <button onClick={handleDownloadPDF} style={{ marginLeft: \"10px\" }}>\r\n        Download PDF\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}