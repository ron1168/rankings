{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst universities = [{\n  name: \"Massachusetts Institute of Technology (MIT)\",\n  qsRank: 1,\n  subjects: [{\n    name: \"Computer Science\",\n    rankings: {\n      2025: {\n        rank: 1,\n        gpa: 3.9,\n        sat: 1550\n      },\n      2024: {\n        rank: 1,\n        gpa: 3.8,\n        sat: 1520\n      },\n      2023: {\n        rank: 1,\n        gpa: 3.7,\n        sat: 1500\n      },\n      2022: {\n        rank: 2,\n        gpa: 3.6,\n        sat: 1480\n      },\n      2021: {\n        rank: 2,\n        gpa: 3.6,\n        sat: 1450\n      }\n    },\n    fees: \"$50,000\",\n    intake: \"September\",\n    eligibility: {\n      international: \"Bachelor’s degree in relevant field\",\n      domestic: \"Bachelor’s degree with minimum 3.0 GPA\"\n    }\n  }, {\n    name: \"Mathematics\",\n    rankings: {\n      2025: {\n        rank: 2,\n        gpa: 3.8,\n        sat: 1500\n      },\n      2024: {\n        rank: 2,\n        gpa: 3.7,\n        sat: 1480\n      },\n      2023: {\n        rank: 2,\n        gpa: 3.6,\n        sat: 1450\n      },\n      2022: {\n        rank: 3,\n        gpa: 3.6,\n        sat: 1430\n      },\n      2021: {\n        rank: 3,\n        gpa: 3.5,\n        sat: 1400\n      }\n    },\n    fees: \"$48,000\",\n    intake: \"September\",\n    eligibility: {\n      international: \"Bachelor’s in Mathematics or related\",\n      domestic: \"Minimum 3.0 GPA in undergrad\"\n    }\n  }]\n}, {\n  name: \"Stanford University\",\n  qsRank: 2,\n  subjects: [{\n    name: \"Computer Science\",\n    rankings: {\n      2025: {\n        rank: 2,\n        gpa: 3.8,\n        sat: 1520\n      },\n      2024: {\n        rank: 2,\n        gpa: 3.8,\n        sat: 1500\n      },\n      2023: {\n        rank: 3,\n        gpa: 3.7,\n        sat: 1480\n      },\n      2022: {\n        rank: 3,\n        gpa: 3.6,\n        sat: 1460\n      },\n      2021: {\n        rank: 4,\n        gpa: 3.5,\n        sat: 1430\n      }\n    },\n    fees: \"$49,000\",\n    intake: \"August\",\n    eligibility: {\n      international: \"Bachelor’s degree with strong academics\",\n      domestic: \"3.2 GPA or higher in undergrad\"\n    }\n  }]\n}];\nfunction App() {\n  _s();\n  const [selectedUniversity, setSelectedUniversity] = useState(\"\");\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\n  const [studentType, setStudentType] = useState(\"international\");\n  const [cgpa, setCgpa] = useState(\"\");\n  const [sat, setSat] = useState(\"\");\n  const [savedReports, setSavedReports] = useState([]);\n  const handleSave = () => {\n    const university = universities.find(u => u.name === selectedUniversity);\n    const subject = university === null || university === void 0 ? void 0 : university.subjects.find(s => s.name === selectedSubject);\n    const latestYear = Math.max(...Object.keys(subject.rankings).map(Number));\n    const latest = subject.rankings[latestYear];\n    const admissionProbability = parseFloat(cgpa) >= latest.gpa && parseInt(sat) >= latest.sat ? \"High\" : parseFloat(cgpa) >= latest.gpa || parseInt(sat) >= latest.sat ? \"Medium\" : \"Low\";\n    const report = {\n      university: selectedUniversity,\n      subject: selectedSubject,\n      generalRank: university.qsRank,\n      fees: subject.fees,\n      intake: subject.intake,\n      eligibility: subject.eligibility[studentType],\n      cgpa,\n      sat,\n      admissionProbability,\n      rankings: subject.rankings\n    };\n    setSavedReports([...savedReports, report]);\n  };\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(savedReports);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Reports\");\n    XLSX.writeFile(workbook, \"Admission_Reports.xlsx\");\n  };\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n    const columns = [\"University\", \"Subject\", \"General Rank\", \"Fees\", \"Intake\", \"Eligibility\", \"CGPA\", \"SAT\", \"Admission Probability\"];\n    const rows = savedReports.map(r => [r.university, r.subject, r.generalRank, r.fees, r.intake, r.eligibility, r.cgpa, r.sat, r.admissionProbability]);\n    doc.autoTable({\n      head: [columns],\n      body: rows\n    });\n    doc.save(\"Admission_Reports.pdf\");\n  };\n  const university = universities.find(u => u.name === selectedUniversity);\n  const subject = university === null || university === void 0 ? void 0 : university.subjects.find(s => s.name === selectedSubject);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"University Admission Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"University: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedUniversity(e.target.value),\n      value: selectedUniversity,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u.name,\n        children: u.name\n      }, u.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), university && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"QS General Ranking:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 14\n        }, this), \" #\", university.qsRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubject(e.target.value),\n        value: selectedSubject,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), university.subjects.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s.name,\n          children: s.name\n        }, s.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), subject && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fees:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 14\n        }, this), \" \", subject.fees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Intake:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 14\n        }, this), \" \", subject.intake]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Eligibility (\", studentType, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 14\n        }, this), \" \", subject.eligibility[studentType]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Subject-wise Rankings and Cutoffs (Last 5 Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"QS Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GPA Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SAT Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(subject.rankings).sort((a, b) => b[0] - a[0]).map(([year, data]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.rank\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.gpa\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.sat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Student Type: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: studentType,\n      onChange: e => setStudentType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"international\",\n        children: \"International\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"domestic\",\n        children: \"Domestic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"CGPA: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: cgpa,\n      onChange: e => setCgpa(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"SAT Score: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sat,\n      onChange: e => setSat(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToExcel,\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToPDF,\n      children: \"Export to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Saved Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), savedReports.map((report, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        padding: \"10px\",\n        margin: \"10px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"University:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 14\n        }, this), \" \", report.university]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 14\n        }, this), \" \", report.subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"QS General Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 14\n        }, this), \" #\", report.generalRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Fees:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 14\n        }, this), \" \", report.fees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Intake:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 14\n        }, this), \" \", report.intake]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Eligibility:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 14\n        }, this), \" \", report.eligibility]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"CGPA:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 14\n        }, this), \" \", report.cgpa]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SAT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 14\n        }, this), \" \", report.sat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Admission Probability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 14\n        }, this), \" \", report.admissionProbability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TYVJn79WP9JsEjiOGwn9HWArYCg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","jsPDF","jsxDEV","_jsxDEV","universities","name","qsRank","subjects","rankings","rank","gpa","sat","fees","intake","eligibility","international","domestic","App","_s","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","studentType","setStudentType","cgpa","setCgpa","setSat","savedReports","setSavedReports","handleSave","university","find","u","subject","s","latestYear","Math","max","Object","keys","map","Number","latest","admissionProbability","parseFloat","parseInt","report","generalRank","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","exportToPDF","doc","columns","rows","r","autoTable","head","body","save","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","border","cellPadding","entries","sort","a","b","year","data","type","onClick","index","margin","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\nconst universities = [\r\n  {\r\n    name: \"Massachusetts Institute of Technology (MIT)\",\r\n    qsRank: 1,\r\n    subjects: [\r\n      {\r\n        name: \"Computer Science\",\r\n        rankings: {\r\n          2025: { rank: 1, gpa: 3.9, sat: 1550 },\r\n          2024: { rank: 1, gpa: 3.8, sat: 1520 },\r\n          2023: { rank: 1, gpa: 3.7, sat: 1500 },\r\n          2022: { rank: 2, gpa: 3.6, sat: 1480 },\r\n          2021: { rank: 2, gpa: 3.6, sat: 1450 },\r\n        },\r\n        fees: \"$50,000\",\r\n        intake: \"September\",\r\n        eligibility: {\r\n          international: \"Bachelor’s degree in relevant field\",\r\n          domestic: \"Bachelor’s degree with minimum 3.0 GPA\",\r\n        },\r\n      },\r\n      {\r\n        name: \"Mathematics\",\r\n        rankings: {\r\n          2025: { rank: 2, gpa: 3.8, sat: 1500 },\r\n          2024: { rank: 2, gpa: 3.7, sat: 1480 },\r\n          2023: { rank: 2, gpa: 3.6, sat: 1450 },\r\n          2022: { rank: 3, gpa: 3.6, sat: 1430 },\r\n          2021: { rank: 3, gpa: 3.5, sat: 1400 },\r\n        },\r\n        fees: \"$48,000\",\r\n        intake: \"September\",\r\n        eligibility: {\r\n          international: \"Bachelor’s in Mathematics or related\",\r\n          domestic: \"Minimum 3.0 GPA in undergrad\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    name: \"Stanford University\",\r\n    qsRank: 2,\r\n    subjects: [\r\n      {\r\n        name: \"Computer Science\",\r\n        rankings: {\r\n          2025: { rank: 2, gpa: 3.8, sat: 1520 },\r\n          2024: { rank: 2, gpa: 3.8, sat: 1500 },\r\n          2023: { rank: 3, gpa: 3.7, sat: 1480 },\r\n          2022: { rank: 3, gpa: 3.6, sat: 1460 },\r\n          2021: { rank: 4, gpa: 3.5, sat: 1430 },\r\n        },\r\n        fees: \"$49,000\",\r\n        intake: \"August\",\r\n        eligibility: {\r\n          international: \"Bachelor’s degree with strong academics\",\r\n          domestic: \"3.2 GPA or higher in undergrad\",\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(\"\");\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  const [studentType, setStudentType] = useState(\"international\");\r\n  const [cgpa, setCgpa] = useState(\"\");\r\n  const [sat, setSat] = useState(\"\");\r\n  const [savedReports, setSavedReports] = useState([]);\r\n\r\n  const handleSave = () => {\r\n    const university = universities.find(u => u.name === selectedUniversity);\r\n    const subject = university?.subjects.find(s => s.name === selectedSubject);\r\n    const latestYear = Math.max(...Object.keys(subject.rankings).map(Number));\r\n    const latest = subject.rankings[latestYear];\r\n\r\n    const admissionProbability =\r\n      parseFloat(cgpa) >= latest.gpa && parseInt(sat) >= latest.sat\r\n        ? \"High\"\r\n        : parseFloat(cgpa) >= latest.gpa || parseInt(sat) >= latest.sat\r\n        ? \"Medium\"\r\n        : \"Low\";\r\n\r\n    const report = {\r\n      university: selectedUniversity,\r\n      subject: selectedSubject,\r\n      generalRank: university.qsRank,\r\n      fees: subject.fees,\r\n      intake: subject.intake,\r\n      eligibility: subject.eligibility[studentType],\r\n      cgpa,\r\n      sat,\r\n      admissionProbability,\r\n      rankings: subject.rankings,\r\n    };\r\n\r\n    setSavedReports([...savedReports, report]);\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(savedReports);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Reports\");\r\n    XLSX.writeFile(workbook, \"Admission_Reports.xlsx\");\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF();\r\n    const columns = [\r\n      \"University\",\r\n      \"Subject\",\r\n      \"General Rank\",\r\n      \"Fees\",\r\n      \"Intake\",\r\n      \"Eligibility\",\r\n      \"CGPA\",\r\n      \"SAT\",\r\n      \"Admission Probability\",\r\n    ];\r\n    const rows = savedReports.map(r => [\r\n      r.university,\r\n      r.subject,\r\n      r.generalRank,\r\n      r.fees,\r\n      r.intake,\r\n      r.eligibility,\r\n      r.cgpa,\r\n      r.sat,\r\n      r.admissionProbability,\r\n    ]);\r\n    doc.autoTable({ head: [columns], body: rows });\r\n    doc.save(\"Admission_Reports.pdf\");\r\n  };\r\n\r\n  const university = universities.find(u => u.name === selectedUniversity);\r\n  const subject = university?.subjects.find(s => s.name === selectedSubject);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\r\n      <h1>University Admission Predictor</h1>\r\n\r\n      <label>University: </label>\r\n      <select onChange={e => setSelectedUniversity(e.target.value)} value={selectedUniversity}>\r\n        <option value=\"\">Select</option>\r\n        {universities.map(u => (\r\n          <option key={u.name} value={u.name}>\r\n            {u.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {university && (\r\n        <div>\r\n          <p><strong>QS General Ranking:</strong> #{university.qsRank}</p>\r\n          <label>Subject: </label>\r\n          <select onChange={e => setSelectedSubject(e.target.value)} value={selectedSubject}>\r\n            <option value=\"\">Select</option>\r\n            {university.subjects.map(s => (\r\n              <option key={s.name} value={s.name}>\r\n                {s.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {subject && (\r\n        <div>\r\n          <p><strong>Fees:</strong> {subject.fees}</p>\r\n          <p><strong>Intake:</strong> {subject.intake}</p>\r\n          <p><strong>Eligibility ({studentType}):</strong> {subject.eligibility[studentType]}</p>\r\n\r\n          <h3>Subject-wise Rankings and Cutoffs (Last 5 Years)</h3>\r\n          <table border=\"1\" cellPadding=\"5\">\r\n            <thead>\r\n              <tr>\r\n                <th>Year</th>\r\n                <th>QS Rank</th>\r\n                <th>GPA Cutoff</th>\r\n                <th>SAT Cutoff</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.entries(subject.rankings)\r\n                .sort((a, b) => b[0] - a[0])\r\n                .map(([year, data]) => (\r\n                  <tr key={year}>\r\n                    <td>{year}</td>\r\n                    <td>{data.rank}</td>\r\n                    <td>{data.gpa}</td>\r\n                    <td>{data.sat}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      <br />\r\n      <label>Student Type: </label>\r\n      <select value={studentType} onChange={e => setStudentType(e.target.value)}>\r\n        <option value=\"international\">International</option>\r\n        <option value=\"domestic\">Domestic</option>\r\n      </select>\r\n\r\n      <br />\r\n      <label>CGPA: </label>\r\n      <input type=\"number\" value={cgpa} onChange={e => setCgpa(e.target.value)} />\r\n\r\n      <br />\r\n      <label>SAT Score: </label>\r\n      <input type=\"number\" value={sat} onChange={e => setSat(e.target.value)} />\r\n\r\n      <br />\r\n      <button onClick={handleSave}>Save Report</button>\r\n      <button onClick={exportToExcel}>Export to Excel</button>\r\n      <button onClick={exportToPDF}>Export to PDF</button>\r\n\r\n      <h2>Saved Reports</h2>\r\n      {savedReports.map((report, index) => (\r\n        <div key={index} style={{ border: \"1px solid black\", padding: \"10px\", margin: \"10px 0\" }}>\r\n          <p><strong>University:</strong> {report.university}</p>\r\n          <p><strong>Subject:</strong> {report.subject}</p>\r\n          <p><strong>QS General Rank:</strong> #{report.generalRank}</p>\r\n          <p><strong>Fees:</strong> {report.fees}</p>\r\n          <p><strong>Intake:</strong> {report.intake}</p>\r\n          <p><strong>Eligibility:</strong> {report.eligibility}</p>\r\n          <p><strong>CGPA:</strong> {report.cgpa}</p>\r\n          <p><strong>SAT:</strong> {report.sat}</p>\r\n          <p><strong>Admission Probability:</strong> {report.admissionProbability}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}