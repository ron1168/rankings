{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst universities = [{\n  name: \"Massachusetts Institute of Technology (MIT)\",\n  qsGeneralRank: 1,\n  subjects: {\n    \"Computer Science\": {\n      qsRanking: {\n        2025: 1,\n        2024: 1,\n        2023: 2,\n        2022: 1,\n        2021: 1\n      },\n      gpaCutoff: {\n        2025: 3.8,\n        2024: 3.7,\n        2023: 3.7,\n        2022: 3.6,\n        2021: 3.6\n      },\n      satCutoff: {\n        2025: 1500,\n        2024: 1480,\n        2023: 1450,\n        2022: 1430,\n        2021: 1400\n      },\n      intake: \"August\",\n      deadline: \"January 1\",\n      fees: {\n        international: \"$53,790\",\n        domestic: \"$53,790\"\n      }\n    },\n    Engineering: {\n      qsRanking: {\n        2025: 1,\n        2024: 1,\n        2023: 1,\n        2022: 1,\n        2021: 1\n      },\n      gpaCutoff: {\n        2025: 3.9,\n        2024: 3.8,\n        2023: 3.8,\n        2022: 3.7,\n        2021: 3.6\n      },\n      satCutoff: {\n        2025: 1520,\n        2024: 1500,\n        2023: 1470,\n        2022: 1450,\n        2021: 1420\n      },\n      intake: \"September\",\n      deadline: \"February 1\",\n      fees: {\n        international: \"$54,200\",\n        domestic: \"$54,200\"\n      }\n    },\n    Mathematics: {\n      qsRanking: {\n        2025: 3,\n        2024: 2,\n        2023: 2,\n        2022: 2,\n        2021: 2\n      },\n      gpaCutoff: {\n        2025: 3.7,\n        2024: 3.6,\n        2023: 3.6,\n        2022: 3.5,\n        2021: 3.4\n      },\n      satCutoff: {\n        2025: 1480,\n        2024: 1450,\n        2023: 1430,\n        2022: 1400,\n        2021: 1380\n      },\n      intake: \"August\",\n      deadline: \"January 5\",\n      fees: {\n        international: \"$53,500\",\n        domestic: \"$53,500\"\n      }\n    }\n  }\n}];\nfunction App() {\n  _s();\n  var _selectedUniversityDa;\n  const [selectedUniversity, setSelectedUniversity] = useState(\"\");\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\n  const [studentType, setStudentType] = useState(\"international\");\n  const [cgpa, setCgpa] = useState(\"\");\n  const [satScore, setSatScore] = useState(\"\");\n  const [reports, setReports] = useState([]);\n  const handleSave = () => {\n    var _universities$find, _universities$find$su;\n    const subjectDetails = (_universities$find = universities.find(uni => uni.name === selectedUniversity)) === null || _universities$find === void 0 ? void 0 : (_universities$find$su = _universities$find.subjects) === null || _universities$find$su === void 0 ? void 0 : _universities$find$su[selectedSubject];\n    if (!subjectDetails) return;\n    const latestYear = Math.max(...Object.keys(subjectDetails.qsRanking));\n    const admissionProbability = parseFloat(cgpa) >= subjectDetails.gpaCutoff[latestYear] && parseInt(satScore) >= subjectDetails.satCutoff[latestYear] ? \"High\" : \"Moderate\";\n    setReports([...reports, {\n      university: selectedUniversity,\n      subject: selectedSubject,\n      cgpa,\n      satScore,\n      fees: subjectDetails.fees[studentType],\n      deadline: subjectDetails.deadline,\n      intake: subjectDetails.intake,\n      admissionProbability\n    }]);\n  };\n  const exportToPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Saved Reports\", 14, 10);\n    const rows = reports.map(r => [r.university, r.subject, r.cgpa, r.satScore, r.fees, r.deadline, r.intake, r.admissionProbability]);\n    doc.autoTable({\n      head: [[\"University\", \"Subject\", \"CGPA\", \"SAT\", \"Fees\", \"Deadline\", \"Intake\", \"Probability\"]],\n      body: rows\n    });\n    doc.save(\"reports.pdf\");\n  };\n  const exportToExcel = () => {\n    const worksheet = XLSX.utils.json_to_sheet(reports);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Reports\");\n    XLSX.writeFile(workbook, \"reports.xlsx\");\n  };\n  const selectedUniversityData = universities.find(u => u.name === selectedUniversity);\n  const subjectDetails = selectedUniversityData === null || selectedUniversityData === void 0 ? void 0 : (_selectedUniversityDa = selectedUniversityData.subjects) === null || _selectedUniversityDa === void 0 ? void 0 : _selectedUniversityDa[selectedSubject];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QS University Admission Predictor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"University: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedUniversity,\n      onChange: e => {\n        setSelectedUniversity(e.target.value);\n        setSelectedSubject(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), universities.map(uni => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: uni.name,\n        children: uni.name\n      }, uni.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), selectedUniversity && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedUniversity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"QS General Rank:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 14\n        }, this), \" #\", selectedUniversityData.qsGeneralRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSubject,\n        onChange: e => setSelectedSubject(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), Object.keys(selectedUniversityData.subjects).map(subj => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: subj,\n          children: subj\n        }, subj, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedSubject && subjectDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Details for \", selectedSubject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"QS Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"GPA Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"SAT Cutoff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(subjectDetails.qsRanking).sort((a, b) => b - a).map(year => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subjectDetails.qsRanking[year]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subjectDetails.gpaCutoff[year]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subjectDetails.satCutoff[year]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Course Intake:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 14\n        }, this), \" \", subjectDetails.intake]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Application Deadline:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 14\n        }, this), \" \", subjectDetails.deadline]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Fees (\", studentType, \"):\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 14\n        }, this), \" \", subjectDetails.fees[studentType]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Student Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: studentType,\n        onChange: e => setStudentType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"international\",\n          children: \"International\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"domestic\",\n          children: \"Domestic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"CGPA: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: cgpa,\n        onChange: e => setCgpa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"SAT Score: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: satScore,\n        onChange: e => setSatScore(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToPDF,\n      children: \"Export to PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportToExcel,\n      children: \"Export to Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Saved Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CGPA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"SAT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Intake\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Probability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reports.map((r, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.university\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.cgpa\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.satScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.fees\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.deadline\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.intake\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: r.admissionProbability\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sPja76cGwpuim+rlZ9ctVE+ooTg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsPDF","XLSX","jsxDEV","_jsxDEV","Fragment","_Fragment","universities","name","qsGeneralRank","subjects","qsRanking","gpaCutoff","satCutoff","intake","deadline","fees","international","domestic","Engineering","Mathematics","App","_s","_selectedUniversityDa","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","studentType","setStudentType","cgpa","setCgpa","satScore","setSatScore","reports","setReports","handleSave","_universities$find","_universities$find$su","subjectDetails","find","uni","latestYear","Math","max","Object","keys","admissionProbability","parseFloat","parseInt","university","subject","exportToPDF","doc","text","rows","map","r","autoTable","head","body","save","exportToExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","selectedUniversityData","u","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","subj","border","sort","a","b","year","type","onClick","i","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst universities = [\r\n  {\r\n    name: \"Massachusetts Institute of Technology (MIT)\",\r\n    qsGeneralRank: 1,\r\n    subjects: {\r\n      \"Computer Science\": {\r\n        qsRanking: { 2025: 1, 2024: 1, 2023: 2, 2022: 1, 2021: 1 },\r\n        gpaCutoff: { 2025: 3.8, 2024: 3.7, 2023: 3.7, 2022: 3.6, 2021: 3.6 },\r\n        satCutoff: { 2025: 1500, 2024: 1480, 2023: 1450, 2022: 1430, 2021: 1400 },\r\n        intake: \"August\",\r\n        deadline: \"January 1\",\r\n        fees: { international: \"$53,790\", domestic: \"$53,790\" }\r\n      },\r\n      Engineering: {\r\n        qsRanking: { 2025: 1, 2024: 1, 2023: 1, 2022: 1, 2021: 1 },\r\n        gpaCutoff: { 2025: 3.9, 2024: 3.8, 2023: 3.8, 2022: 3.7, 2021: 3.6 },\r\n        satCutoff: { 2025: 1520, 2024: 1500, 2023: 1470, 2022: 1450, 2021: 1420 },\r\n        intake: \"September\",\r\n        deadline: \"February 1\",\r\n        fees: { international: \"$54,200\", domestic: \"$54,200\" }\r\n      },\r\n      Mathematics: {\r\n        qsRanking: { 2025: 3, 2024: 2, 2023: 2, 2022: 2, 2021: 2 },\r\n        gpaCutoff: { 2025: 3.7, 2024: 3.6, 2023: 3.6, 2022: 3.5, 2021: 3.4 },\r\n        satCutoff: { 2025: 1480, 2024: 1450, 2023: 1430, 2022: 1400, 2021: 1380 },\r\n        intake: \"August\",\r\n        deadline: \"January 5\",\r\n        fees: { international: \"$53,500\", domestic: \"$53,500\" }\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(\"\");\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  const [studentType, setStudentType] = useState(\"international\");\r\n  const [cgpa, setCgpa] = useState(\"\");\r\n  const [satScore, setSatScore] = useState(\"\");\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const handleSave = () => {\r\n    const subjectDetails = universities\r\n      .find((uni) => uni.name === selectedUniversity)?.subjects?.[selectedSubject];\r\n    if (!subjectDetails) return;\r\n\r\n    const latestYear = Math.max(...Object.keys(subjectDetails.qsRanking));\r\n    const admissionProbability =\r\n      parseFloat(cgpa) >= subjectDetails.gpaCutoff[latestYear] &&\r\n      parseInt(satScore) >= subjectDetails.satCutoff[latestYear] ? \"High\" : \"Moderate\";\r\n\r\n    setReports([\r\n      ...reports,\r\n      {\r\n        university: selectedUniversity,\r\n        subject: selectedSubject,\r\n        cgpa,\r\n        satScore,\r\n        fees: subjectDetails.fees[studentType],\r\n        deadline: subjectDetails.deadline,\r\n        intake: subjectDetails.intake,\r\n        admissionProbability\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const exportToPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.text(\"Saved Reports\", 14, 10);\r\n    const rows = reports.map(r => [\r\n      r.university, r.subject, r.cgpa, r.satScore, r.fees, r.deadline, r.intake, r.admissionProbability\r\n    ]);\r\n    doc.autoTable({ head: [[\"University\", \"Subject\", \"CGPA\", \"SAT\", \"Fees\", \"Deadline\", \"Intake\", \"Probability\"]], body: rows });\r\n    doc.save(\"reports.pdf\");\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const worksheet = XLSX.utils.json_to_sheet(reports);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Reports\");\r\n    XLSX.writeFile(workbook, \"reports.xlsx\");\r\n  };\r\n\r\n  const selectedUniversityData = universities.find(u => u.name === selectedUniversity);\r\n  const subjectDetails = selectedUniversityData?.subjects?.[selectedSubject];\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>QS University Admission Predictor</h1>\r\n\r\n      <label>University: </label>\r\n      <select value={selectedUniversity} onChange={(e) => {\r\n        setSelectedUniversity(e.target.value);\r\n        setSelectedSubject(\"\");\r\n      }}>\r\n        <option value=\"\">Select University</option>\r\n        {universities.map((uni) => (\r\n          <option key={uni.name} value={uni.name}>{uni.name}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedUniversity && (\r\n        <>\r\n          <h2>{selectedUniversity}</h2>\r\n          <p><strong>QS General Rank:</strong> #{selectedUniversityData.qsGeneralRank}</p>\r\n          <label>Subject: </label>\r\n          <select value={selectedSubject} onChange={(e) => setSelectedSubject(e.target.value)}>\r\n            <option value=\"\">Select Subject</option>\r\n            {Object.keys(selectedUniversityData.subjects).map((subj) => (\r\n              <option key={subj} value={subj}>{subj}</option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      )}\r\n\r\n      {selectedSubject && subjectDetails && (\r\n        <>\r\n          <h3>Details for {selectedSubject}</h3>\r\n          <table border=\"1\">\r\n            <thead>\r\n              <tr>\r\n                <th>Year</th>\r\n                <th>QS Rank</th>\r\n                <th>GPA Cutoff</th>\r\n                <th>SAT Cutoff</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {Object.keys(subjectDetails.qsRanking).sort((a, b) => b - a).map((year) => (\r\n                <tr key={year}>\r\n                  <td>{year}</td>\r\n                  <td>{subjectDetails.qsRanking[year]}</td>\r\n                  <td>{subjectDetails.gpaCutoff[year]}</td>\r\n                  <td>{subjectDetails.satCutoff[year]}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <p><strong>Course Intake:</strong> {subjectDetails.intake}</p>\r\n          <p><strong>Application Deadline:</strong> {subjectDetails.deadline}</p>\r\n          <p><strong>Fees ({studentType}):</strong> {subjectDetails.fees[studentType]}</p>\r\n        </>\r\n      )}\r\n\r\n      <div>\r\n        <label>Student Type: </label>\r\n        <select value={studentType} onChange={(e) => setStudentType(e.target.value)}>\r\n          <option value=\"international\">International</option>\r\n          <option value=\"domestic\">Domestic</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <label>CGPA: </label>\r\n        <input type=\"number\" value={cgpa} onChange={(e) => setCgpa(e.target.value)} />\r\n      </div>\r\n\r\n      <div>\r\n        <label>SAT Score: </label>\r\n        <input type=\"number\" value={satScore} onChange={(e) => setSatScore(e.target.value)} />\r\n      </div>\r\n\r\n      <button onClick={handleSave}>Save Report</button>\r\n      <button onClick={exportToPDF}>Export to PDF</button>\r\n      <button onClick={exportToExcel}>Export to Excel</button>\r\n\r\n      <h2>Saved Reports</h2>\r\n      <table border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <th>University</th>\r\n            <th>Subject</th>\r\n            <th>CGPA</th>\r\n            <th>SAT</th>\r\n            <th>Fees</th>\r\n            <th>Deadline</th>\r\n            <th>Intake</th>\r\n            <th>Probability</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {reports.map((r, i) => (\r\n            <tr key={i}>\r\n              <td>{r.university}</td>\r\n              <td>{r.subject}</td>\r\n              <td>{r.cgpa}</td>\r\n              <td>{r.satScore}</td>\r\n              <td>{r.fees}</td>\r\n              <td>{r.deadline}</td>\r\n              <td>{r.intake}</td>\r\n              <td>{r.admissionProbability}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,YAAY,GAAG,CACnB;EACEC,IAAI,EAAE,6CAA6C;EACnDC,aAAa,EAAE,CAAC;EAChBC,QAAQ,EAAE;IACR,kBAAkB,EAAE;MAClBC,SAAS,EAAE;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE;MAAE,CAAC;MAC1DC,SAAS,EAAE;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE;MAAI,CAAC;MACpEC,SAAS,EAAE;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE;MAAK,CAAC;MACzEC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,WAAW;MACrBC,IAAI,EAAE;QAAEC,aAAa,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAU;IACxD,CAAC;IACDC,WAAW,EAAE;MACXR,SAAS,EAAE;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE;MAAE,CAAC;MAC1DC,SAAS,EAAE;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE;MAAI,CAAC;MACpEC,SAAS,EAAE;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE;MAAK,CAAC;MACzEC,MAAM,EAAE,WAAW;MACnBC,QAAQ,EAAE,YAAY;MACtBC,IAAI,EAAE;QAAEC,aAAa,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAU;IACxD,CAAC;IACDE,WAAW,EAAE;MACXT,SAAS,EAAE;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE,CAAC;QAAE,IAAI,EAAE;MAAE,CAAC;MAC1DC,SAAS,EAAE;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE,GAAG;QAAE,IAAI,EAAE;MAAI,CAAC;MACpEC,SAAS,EAAE;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE,IAAI;QAAE,IAAI,EAAE;MAAK,CAAC;MACzEC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,WAAW;MACrBC,IAAI,EAAE;QAAEC,aAAa,EAAE,SAAS;QAAEC,QAAQ,EAAE;MAAU;IACxD;EACF;AACF,CAAC,CACF;AAED,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACb,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,eAAe,CAAC;EAC/D,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgC,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMoC,UAAU,GAAGA,CAAA,KAAM;IAAA,IAAAC,kBAAA,EAAAC,qBAAA;IACvB,MAAMC,cAAc,IAAAF,kBAAA,GAAG9B,YAAY,CAChCiC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACjC,IAAI,KAAKgB,kBAAkB,CAAC,cAAAa,kBAAA,wBAAAC,qBAAA,GAD1BD,kBAAA,CAC4B3B,QAAQ,cAAA4B,qBAAA,uBADpCA,qBAAA,CACuCZ,eAAe,CAAC;IAC9E,IAAI,CAACa,cAAc,EAAE;IAErB,MAAMG,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC5B,SAAS,CAAC,CAAC;IACrE,MAAMoC,oBAAoB,GACxBC,UAAU,CAAClB,IAAI,CAAC,IAAIS,cAAc,CAAC3B,SAAS,CAAC8B,UAAU,CAAC,IACxDO,QAAQ,CAACjB,QAAQ,CAAC,IAAIO,cAAc,CAAC1B,SAAS,CAAC6B,UAAU,CAAC,GAAG,MAAM,GAAG,UAAU;IAElFP,UAAU,CAAC,CACT,GAAGD,OAAO,EACV;MACEgB,UAAU,EAAE1B,kBAAkB;MAC9B2B,OAAO,EAAEzB,eAAe;MACxBI,IAAI;MACJE,QAAQ;MACRhB,IAAI,EAAEuB,cAAc,CAACvB,IAAI,CAACY,WAAW,CAAC;MACtCb,QAAQ,EAAEwB,cAAc,CAACxB,QAAQ;MACjCD,MAAM,EAAEyB,cAAc,CAACzB,MAAM;MAC7BiC;IACF,CAAC,CACF,CAAC;EACJ,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,IAAIpD,KAAK,CAAC,CAAC;IACvBoD,GAAG,CAACC,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,CAAC;IACjC,MAAMC,IAAI,GAAGrB,OAAO,CAACsB,GAAG,CAACC,CAAC,IAAI,CAC5BA,CAAC,CAACP,UAAU,EAAEO,CAAC,CAACN,OAAO,EAAEM,CAAC,CAAC3B,IAAI,EAAE2B,CAAC,CAACzB,QAAQ,EAAEyB,CAAC,CAACzC,IAAI,EAAEyC,CAAC,CAAC1C,QAAQ,EAAE0C,CAAC,CAAC3C,MAAM,EAAE2C,CAAC,CAACV,oBAAoB,CAClG,CAAC;IACFM,GAAG,CAACK,SAAS,CAAC;MAAEC,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;MAAEC,IAAI,EAAEL;IAAK,CAAC,CAAC;IAC5HF,GAAG,CAACQ,IAAI,CAAC,aAAa,CAAC;EACzB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,SAAS,GAAG7D,IAAI,CAAC8D,KAAK,CAACC,aAAa,CAAC/B,OAAO,CAAC;IACnD,MAAMgC,QAAQ,GAAGhE,IAAI,CAAC8D,KAAK,CAACG,QAAQ,CAAC,CAAC;IACtCjE,IAAI,CAAC8D,KAAK,CAACI,iBAAiB,CAACF,QAAQ,EAAEH,SAAS,EAAE,SAAS,CAAC;IAC5D7D,IAAI,CAACmE,SAAS,CAACH,QAAQ,EAAE,cAAc,CAAC;EAC1C,CAAC;EAED,MAAMI,sBAAsB,GAAG/D,YAAY,CAACiC,IAAI,CAAC+B,CAAC,IAAIA,CAAC,CAAC/D,IAAI,KAAKgB,kBAAkB,CAAC;EACpF,MAAMe,cAAc,GAAG+B,sBAAsB,aAAtBA,sBAAsB,wBAAA/C,qBAAA,GAAtB+C,sBAAsB,CAAE5D,QAAQ,cAAAa,qBAAA,uBAAhCA,qBAAA,CAAmCG,eAAe,CAAC;EAE1E,oBACEtB,OAAA;IAAKoE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrE,OAAA;MAAAqE,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1CzE,OAAA;MAAAqE,QAAA,EAAO;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC3BzE,OAAA;MAAQ0E,KAAK,EAAEtD,kBAAmB;MAACuD,QAAQ,EAAGC,CAAC,IAAK;QAClDvD,qBAAqB,CAACuD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACrCnD,kBAAkB,CAAC,EAAE,CAAC;MACxB,CAAE;MAAA8C,QAAA,gBACArE,OAAA;QAAQ0E,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1CtE,YAAY,CAACiD,GAAG,CAAEf,GAAG,iBACpBrC,OAAA;QAAuB0E,KAAK,EAAErC,GAAG,CAACjC,IAAK;QAAAiE,QAAA,EAAEhC,GAAG,CAACjC;MAAI,GAApCiC,GAAG,CAACjC,IAAI;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqC,CAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAERrD,kBAAkB,iBACjBpB,OAAA,CAAAE,SAAA;MAAAmE,QAAA,gBACErE,OAAA;QAAAqE,QAAA,EAAKjD;MAAkB;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7BzE,OAAA;QAAAqE,QAAA,gBAAGrE,OAAA;UAAAqE,QAAA,EAAQ;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,MAAE,EAACP,sBAAsB,CAAC7D,aAAa;MAAA;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChFzE,OAAA;QAAAqE,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBzE,OAAA;QAAQ0E,KAAK,EAAEpD,eAAgB;QAACqD,QAAQ,EAAGC,CAAC,IAAKrD,kBAAkB,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBAClFrE,OAAA;UAAQ0E,KAAK,EAAC,EAAE;UAAAL,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACvChC,MAAM,CAACC,IAAI,CAACwB,sBAAsB,CAAC5D,QAAQ,CAAC,CAAC8C,GAAG,CAAE0B,IAAI,iBACrD9E,OAAA;UAAmB0E,KAAK,EAAEI,IAAK;UAAAT,QAAA,EAAES;QAAI,GAAxBA,IAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA,eACT,CACH,EAEAnD,eAAe,IAAIa,cAAc,iBAChCnC,OAAA,CAAAE,SAAA;MAAAmE,QAAA,gBACErE,OAAA;QAAAqE,QAAA,GAAI,cAAY,EAAC/C,eAAe;MAAA;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCzE,OAAA;QAAO+E,MAAM,EAAC,GAAG;QAAAV,QAAA,gBACfrE,OAAA;UAAAqE,QAAA,eACErE,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cAAAqE,QAAA,EAAI;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbzE,OAAA;cAAAqE,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBzE,OAAA;cAAAqE,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBzE,OAAA;cAAAqE,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRzE,OAAA;UAAAqE,QAAA,EACG5B,MAAM,CAACC,IAAI,CAACP,cAAc,CAAC5B,SAAS,CAAC,CAACyE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAGD,CAAC,CAAC,CAAC7B,GAAG,CAAE+B,IAAI,iBACpEnF,OAAA;YAAAqE,QAAA,gBACErE,OAAA;cAAAqE,QAAA,EAAKc;YAAI;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACfzE,OAAA;cAAAqE,QAAA,EAAKlC,cAAc,CAAC5B,SAAS,CAAC4E,IAAI;YAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzCzE,OAAA;cAAAqE,QAAA,EAAKlC,cAAc,CAAC3B,SAAS,CAAC2E,IAAI;YAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzCzE,OAAA;cAAAqE,QAAA,EAAKlC,cAAc,CAAC1B,SAAS,CAAC0E,IAAI;YAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAJlCU,IAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKT,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAERzE,OAAA;QAAAqE,QAAA,gBAAGrE,OAAA;UAAAqE,QAAA,EAAQ;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACtC,cAAc,CAACzB,MAAM;MAAA;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DzE,OAAA;QAAAqE,QAAA,gBAAGrE,OAAA;UAAAqE,QAAA,EAAQ;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACtC,cAAc,CAACxB,QAAQ;MAAA;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvEzE,OAAA;QAAAqE,QAAA,gBAAGrE,OAAA;UAAAqE,QAAA,GAAQ,QAAM,EAAC7C,WAAW,EAAC,IAAE;QAAA;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACtC,cAAc,CAACvB,IAAI,CAACY,WAAW,CAAC;MAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAChF,CACH,eAEDzE,OAAA;MAAAqE,QAAA,gBACErE,OAAA;QAAAqE,QAAA,EAAO;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7BzE,OAAA;QAAQ0E,KAAK,EAAElD,WAAY;QAACmD,QAAQ,EAAGC,CAAC,IAAKnD,cAAc,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBAC1ErE,OAAA;UAAQ0E,KAAK,EAAC,eAAe;UAAAL,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpDzE,OAAA;UAAQ0E,KAAK,EAAC,UAAU;UAAAL,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENzE,OAAA;MAAAqE,QAAA,gBACErE,OAAA;QAAAqE,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrBzE,OAAA;QAAOoF,IAAI,EAAC,QAAQ;QAACV,KAAK,EAAEhD,IAAK;QAACiD,QAAQ,EAAGC,CAAC,IAAKjD,OAAO,CAACiD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eAENzE,OAAA;MAAAqE,QAAA,gBACErE,OAAA;QAAAqE,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BzE,OAAA;QAAOoF,IAAI,EAAC,QAAQ;QAACV,KAAK,EAAE9C,QAAS;QAAC+C,QAAQ,EAAGC,CAAC,IAAK/C,WAAW,CAAC+C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC,eAENzE,OAAA;MAAQqF,OAAO,EAAErD,UAAW;MAAAqC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDzE,OAAA;MAAQqF,OAAO,EAAErC,WAAY;MAAAqB,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDzE,OAAA;MAAQqF,OAAO,EAAE3B,aAAc;MAAAW,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExDzE,OAAA;MAAAqE,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzE,OAAA;MAAO+E,MAAM,EAAC,GAAG;MAAAV,QAAA,gBACfrE,OAAA;QAAAqE,QAAA,eACErE,OAAA;UAAAqE,QAAA,gBACErE,OAAA;YAAAqE,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBzE,OAAA;YAAAqE,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBzE,OAAA;YAAAqE,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbzE,OAAA;YAAAqE,QAAA,EAAI;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZzE,OAAA;YAAAqE,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbzE,OAAA;YAAAqE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBzE,OAAA;YAAAqE,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfzE,OAAA;YAAAqE,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRzE,OAAA;QAAAqE,QAAA,EACGvC,OAAO,CAACsB,GAAG,CAAC,CAACC,CAAC,EAAEiC,CAAC,kBAChBtF,OAAA;UAAAqE,QAAA,gBACErE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAACP;UAAU;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBzE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAACN;UAAO;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpBzE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAAC3B;UAAI;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjBzE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAACzB;UAAQ;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBzE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAACzC;UAAI;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjBzE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAAC1C;UAAQ;YAAA2D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACrBzE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAAC3C;UAAM;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnBzE,OAAA;YAAAqE,QAAA,EAAKhB,CAAC,CAACV;UAAoB;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAR1Ba,CAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASN,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACvD,EAAA,CArKQD,GAAG;AAAAsE,EAAA,GAAHtE,GAAG;AAuKZ,eAAeA,GAAG;AAAC,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}