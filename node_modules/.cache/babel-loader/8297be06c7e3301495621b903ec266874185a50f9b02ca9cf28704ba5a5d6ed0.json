{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\qs-rankings\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst universities = [{\n  name: \"Massachusetts Institute of Technology (MIT)\",\n  generalRank: 1,\n  subjects: {\n    \"Computer Science\": {\n      rankByYear: {\n        2021: 1,\n        2022: 1,\n        2023: 1,\n        2024: 1,\n        2025: 1\n      },\n      intake: \"Sep 2025\",\n      fees: \"$53,790\",\n      eligibility: {\n        international: \"GPA 3.8+, SAT 1500+, IELTS 7.5\",\n        domestic: \"GPA 3.6+, SAT 1450+\"\n      },\n      link: \"https://www.mit.edu/computer-science\"\n    }\n  }\n}, {\n  name: \"Stanford University\",\n  generalRank: 2,\n  subjects: {\n    \"Computer Science\": {\n      rankByYear: {\n        2021: 2,\n        2022: 2,\n        2023: 2,\n        2024: 2,\n        2025: 2\n      },\n      intake: \"Sep 2025\",\n      fees: \"$55,473\",\n      eligibility: {\n        international: \"GPA 3.9+, SAT 1520+, IELTS 7.5\",\n        domestic: \"GPA 3.7+, SAT 1450+\"\n      },\n      link: \"https://www.stanford.edu/computer-science\"\n    }\n  }\n}];\nconst App = () => {\n  _s();\n  var _selectedUniversity$s;\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\n  const [gpa, setGpa] = useState(\"\");\n  const [sat, setSat] = useState(\"\");\n  const handleDownloadExcel = () => {\n    if (!selectedUniversity || !selectedSubject) return;\n    const subjectData = selectedUniversity.subjects[selectedSubject];\n    const data = [{\n      University: selectedUniversity.name,\n      Subject: selectedSubject,\n      \"QS General Rank\": selectedUniversity.generalRank,\n      \"QS Subject Rank (2025)\": subjectData.rankByYear[2025],\n      Intake: subjectData.intake,\n      Fees: subjectData.fees,\n      Eligibility: subjectData.eligibility.international\n    }];\n    const worksheet = XLSX.utils.json_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Rankings\");\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: \"xlsx\",\n      type: \"array\"\n    });\n    const fileData = new Blob([excelBuffer], {\n      type: \"application/octet-stream\"\n    });\n    saveAs(fileData, \"rankings.xlsx\");\n  };\n  const handleDownloadPDF = () => {\n    const input = document.getElementById(\"data-section\");\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF();\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(imgData, \"PNG\", 0, 0, pdfWidth, pdfHeight);\n      pdf.save(\"rankings.pdf\");\n    });\n  };\n  const calculateAdmissionProbability = () => {\n    const gpaScore = parseFloat(gpa);\n    const satScore = parseInt(sat);\n    if (isNaN(gpaScore) || isNaN(satScore)) return \"Enter valid GPA and SAT\";\n    if (gpaScore >= 3.9 && satScore >= 1500) return \"High\";\n    if (gpaScore >= 3.5 && satScore >= 1400) return \"Moderate\";\n    return \"Low\";\n  };\n  const selectedData = (selectedUniversity === null || selectedUniversity === void 0 ? void 0 : (_selectedUniversity$s = selectedUniversity.subjects) === null || _selectedUniversity$s === void 0 ? void 0 : _selectedUniversity$s[selectedSubject]) || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QS World University Rankings App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"University: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedUniversity(universities.find(u => u.name === e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), universities.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: u.name,\n        children: u.name\n      }, u.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), selectedUniversity && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Subject: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedSubject(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), Object.keys(selectedUniversity.subjects).map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), selectedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"data-section\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedUniversity.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"QS General Rank: \", selectedUniversity.generalRank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Subject: \", selectedSubject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"QS Subject Rankings:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(selectedData.rankByYear).map(([year, rank]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [year, \": Rank \", rank]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Course Link: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: selectedData.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Intake: \", selectedData.intake]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fees: \", selectedData.fees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Eligibility (International):\", \" \", selectedData.eligibility.international]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Eligibility (Domestic): \", selectedData.eligibility.domestic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Admission Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"GPA: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.1\",\n        value: gpa,\n        onChange: e => setGpa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 10\n        },\n        children: \"SAT: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sat,\n        onChange: e => setSat(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Predicted Admission Probability:\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: calculateAdmissionProbability()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadExcel,\n        children: \"Download Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadPDF,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"feZ6q6ZzoBVlfY14CkcdrI/NuJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","saveAs","XLSX","jsPDF","html2canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","universities","name","generalRank","subjects","rankByYear","intake","fees","eligibility","international","domestic","link","App","_s","_selectedUniversity$s","selectedUniversity","setSelectedUniversity","selectedSubject","setSelectedSubject","gpa","setGpa","sat","setSat","handleDownloadExcel","subjectData","data","University","Subject","Intake","Fees","Eligibility","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","fileData","Blob","handleDownloadPDF","input","document","getElementById","then","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","calculateAdmissionProbability","gpaScore","parseFloat","satScore","parseInt","isNaN","selectedData","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","find","u","target","value","map","Object","keys","s","id","marginTop","entries","year","rank","href","rel","step","marginLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/qs-rankings/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport jsPDF from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nconst universities = [\r\n  {\r\n    name: \"Massachusetts Institute of Technology (MIT)\",\r\n    generalRank: 1,\r\n    subjects: {\r\n      \"Computer Science\": {\r\n        rankByYear: { 2021: 1, 2022: 1, 2023: 1, 2024: 1, 2025: 1 },\r\n        intake: \"Sep 2025\",\r\n        fees: \"$53,790\",\r\n        eligibility: {\r\n          international: \"GPA 3.8+, SAT 1500+, IELTS 7.5\",\r\n          domestic: \"GPA 3.6+, SAT 1450+\"\r\n        },\r\n        link: \"https://www.mit.edu/computer-science\"\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"Stanford University\",\r\n    generalRank: 2,\r\n    subjects: {\r\n      \"Computer Science\": {\r\n        rankByYear: { 2021: 2, 2022: 2, 2023: 2, 2024: 2, 2025: 2 },\r\n        intake: \"Sep 2025\",\r\n        fees: \"$55,473\",\r\n        eligibility: {\r\n          international: \"GPA 3.9+, SAT 1520+, IELTS 7.5\",\r\n          domestic: \"GPA 3.7+, SAT 1450+\"\r\n        },\r\n        link: \"https://www.stanford.edu/computer-science\"\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nconst App = () => {\r\n  const [selectedUniversity, setSelectedUniversity] = useState(null);\r\n  const [selectedSubject, setSelectedSubject] = useState(\"\");\r\n  const [gpa, setGpa] = useState(\"\");\r\n  const [sat, setSat] = useState(\"\");\r\n\r\n  const handleDownloadExcel = () => {\r\n    if (!selectedUniversity || !selectedSubject) return;\r\n    const subjectData =\r\n      selectedUniversity.subjects[selectedSubject];\r\n\r\n    const data = [\r\n      {\r\n        University: selectedUniversity.name,\r\n        Subject: selectedSubject,\r\n        \"QS General Rank\": selectedUniversity.generalRank,\r\n        \"QS Subject Rank (2025)\": subjectData.rankByYear[2025],\r\n        Intake: subjectData.intake,\r\n        Fees: subjectData.fees,\r\n        Eligibility: subjectData.eligibility.international\r\n      }\r\n    ];\r\n\r\n    const worksheet = XLSX.utils.json_to_sheet(data);\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Rankings\");\r\n    const excelBuffer = XLSX.write(workbook, {\r\n      bookType: \"xlsx\",\r\n      type: \"array\"\r\n    });\r\n    const fileData = new Blob([excelBuffer], {\r\n      type: \"application/octet-stream\"\r\n    });\r\n    saveAs(fileData, \"rankings.xlsx\");\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    const input = document.getElementById(\"data-section\");\r\n    html2canvas(input).then(canvas => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF();\r\n      const imgProps = pdf.getImageProperties(imgData);\r\n      const pdfWidth = pdf.internal.pageSize.getWidth();\r\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n      pdf.addImage(imgData, \"PNG\", 0, 0, pdfWidth, pdfHeight);\r\n      pdf.save(\"rankings.pdf\");\r\n    });\r\n  };\r\n\r\n  const calculateAdmissionProbability = () => {\r\n    const gpaScore = parseFloat(gpa);\r\n    const satScore = parseInt(sat);\r\n    if (isNaN(gpaScore) || isNaN(satScore)) return \"Enter valid GPA and SAT\";\r\n    if (gpaScore >= 3.9 && satScore >= 1500) return \"High\";\r\n    if (gpaScore >= 3.5 && satScore >= 1400) return \"Moderate\";\r\n    return \"Low\";\r\n  };\r\n\r\n  const selectedData =\r\n    selectedUniversity?.subjects?.[selectedSubject] || null;\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>QS World University Rankings App</h2>\r\n\r\n      <label>University: </label>\r\n      <select\r\n        onChange={(e) =>\r\n          setSelectedUniversity(\r\n            universities.find((u) => u.name === e.target.value)\r\n          )\r\n        }\r\n      >\r\n        <option value=\"\">Select University</option>\r\n        {universities.map((u) => (\r\n          <option key={u.name} value={u.name}>\r\n            {u.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {selectedUniversity && (\r\n        <>\r\n          <br />\r\n          <label>Subject: </label>\r\n          <select\r\n            onChange={(e) => setSelectedSubject(e.target.value)}\r\n          >\r\n            <option value=\"\">Select Subject</option>\r\n            {Object.keys(selectedUniversity.subjects).map((s) => (\r\n              <option key={s} value={s}>\r\n                {s}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      )}\r\n\r\n      {selectedData && (\r\n        <div id=\"data-section\" style={{ marginTop: 20 }}>\r\n          <h3>{selectedUniversity.name}</h3>\r\n          <p>QS General Rank: {selectedUniversity.generalRank}</p>\r\n          <p>Subject: {selectedSubject}</p>\r\n          <p>\r\n            QS Subject Rankings:\r\n            <ul>\r\n              {Object.entries(selectedData.rankByYear).map(\r\n                ([year, rank]) => (\r\n                  <li key={year}>\r\n                    {year}: Rank {rank}\r\n                  </li>\r\n                )\r\n              )}\r\n            </ul>\r\n          </p>\r\n          <p>Course Link: <a href={selectedData.link} target=\"_blank\" rel=\"noopener noreferrer\">View</a></p>\r\n          <p>Intake: {selectedData.intake}</p>\r\n          <p>Fees: {selectedData.fees}</p>\r\n          <p>\r\n            Eligibility (International):{\" \"}\r\n            {selectedData.eligibility.international}\r\n          </p>\r\n          <p>\r\n            Eligibility (Domestic): {selectedData.eligibility.domestic}\r\n          </p>\r\n\r\n          <h4>Admission Prediction</h4>\r\n          <label>GPA: </label>\r\n          <input\r\n            type=\"number\"\r\n            step=\"0.1\"\r\n            value={gpa}\r\n            onChange={(e) => setGpa(e.target.value)}\r\n          />\r\n          <label style={{ marginLeft: 10 }}>SAT: </label>\r\n          <input\r\n            type=\"number\"\r\n            value={sat}\r\n            onChange={(e) => setSat(e.target.value)}\r\n          />\r\n          <p>\r\n            Predicted Admission Probability:{\" \"}\r\n            <strong>{calculateAdmissionProbability()}</strong>\r\n          </p>\r\n\r\n          <button onClick={handleDownloadExcel}>Download Excel</button>\r\n          <button onClick={handleDownloadPDF} style={{ marginLeft: 10 }}>\r\n            Download PDF\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}